linstor-server (0.7.2-2) experimental; urgency=medium

  [ Robert Altnoeder ]
  * Fixed DbConnectionPool initialization in a test
  * SQL fixes: Improved ANSI SQL compatibility
  * Added DatabaseInfo classes, DatabaseDriverInfo for DB2
  * Controller database fixes
  * Fix missing import for GenericDbUtils
  * Fix SQL migrations: resource connection flags & tcp_port column

  [ Rene Peinthor ]
  * unittest: fix db unittests
  * fix forgetting createResourceDb warnings
  * fix mixing implicit diskless resource with other storage types

  [ Gabor Hernadi ]
  * Swordfish: commiting setting node-name after fullSync

 -- Rene Peinthor <rene.peinthor@linbit.com>  Thu, 15 Nov 2018 10:42:59 +0100

linstor-server (0.7.2-1) experimental; urgency=medium

  [ Joel Colledge ]
  * Make volume definition resize synchronous
  * Create snapshots using reactive approach
  * Delete snapshots using reactive approach
  * Ensure security levels are set consistently for tests
  * Reload number pool auto-allocation ranges after loading properties fro [...]
  * Upgrade guice to 4.2.2 for better Java 10 and 11 support
  * Replace usage of deprecated Flyway features
  * Do not commit or rollback in Flyway migrations

  [ Rene Peinthor ]
  * db-init: set SECURITYLEVEL to NO_SECURITY
  * Add node reconnect API
  * auto-place: allow replicas-on-same to specify property values
  * linstor-common: use latest makefile changes
  * gradle: use same guice versions for extensions
  * Prevent creating resources/volumes with different storage drivers

  [ Gabor Hernadi ]
  * Swordfish: Commiting stltProps.NodeName on auth
  * Swordfish: Exclude specially handled status code
  * Swordfish: Redirect default toString to error generating toString
  * Swordfish: (re-)load json on reconfigure
  * Swordfish: (Re)set nodename in stltProps after FullSync
  * Satellite: setting shutdown-objProt

 -- Rene Peinthor <rene.peinthor@linbit.com>  Mon, 12 Nov 2018 09:44:37 +0100

linstor-server (0.7.1-2) experimental; urgency=medium

  [ Rene Peinthor ]
  * Fully clean intermediate build files 

 -- Rene Peinthor <rene.peinthor@linbit.com>  Tue, 06 Nov 2018 09:10:12 +0100

linstor-server (0.7.1-1) experimental; urgency=medium

  [ Joel Colledge ]
  * Remove thin volume from pending volumes when it has been deployed
  * Close resource deployment event stream when the resource is deleted

 -- Rene Peinthor <rene.peinthor@linbit.com>  Wed, 31 Oct 2018 12:11:19 +0100

linstor-server (0.7.0-1) experimental; urgency=medium

  [ Joel Colledge ]
  * Allow multiple resources to be created with a single API call
  * Make resource auto-place synchronous
  * Remove resource definition ready event which is no longer used
  * Remove unused RequestRscDfn code from the satellite
  * Make new node connection a little less racy
  * Remove unused skipSync method
  * Actually send the already initialized field with the primary request
  * Tidy up use of comparators in the stor pool selection
  * Extract free capacity fetching from the storage pool listing
  * Tidy up auto-place placement count decision logic
  * Auto-place using actual free capacity of thin pools
  * Tidy up some unused imports etc
  * Only fetch free capacities for thin pools and only track free capaciti [...]
  * Fix RscApiTest which now has a free capacity fetcher dependency
  * Supply oversubscription information with the max volume size query
  * Fix resource creation free capacity check to allow resources that cons [...]
  * Remove unused dependencies
  * Only fetch thin free capacity from nodes that have thin pools
  * Remove unused toggle disk methods and dependency
  * Make storage pool creation synchronous so that configuration errors ar [...]
  * Ensure that the satellite answers even when the request was made befor [...]
  * Add optional port field to resource connection to make proxy connectio [...]
  * Add configuration of DRBD proxy running locally
  * Fix test that expected address entries in the node sections rather tha [...]
  * Add configuration of DRBD Proxy options
  * Add configuration of DRBD Proxy compression plugins
  * Refuse to delete a node with snapshots
  * Delete snapshots when a node is lost

  [ Gabor Hernadi ]
  * Fixed usage of correct node namespace for storPool reconfiguration
  * Fixed possible "Access to deleted <object>"
  * Fix: prevent deletion of sf_t resource before sf_i resource
  * Fix: prevent multiple swordfish-target-resources per rscDfn
  * Upgraded FlyWay dependency to version 5.2
  * Made swordfish-initator-driver "diskless"
  * Fixed wrong swrodfish-volume-url
  * Drbdsetup events2 all now restarts when manually killed
  * Added missing return-code checks for swordfish-REST calls
  * Swordfish: Added centralized status-code check
  * Swordfish: Added meaningful volume states
  * Swordfish: Minor error-reporting changes
  * Swordfish: fixed state-checking issues
  * Fixed race-condition when creating storDriver
  * SwordfishDriver also reports volume-state after exception
  * Swordfish_Target nodetype does no longer try to move linstor_common.conf
  * Fixed race-condition in swordfish-driver
  * Fixed swordfish-state strings
  * Added TransactionSet class
  * Made FreeSpaceMgr's pendingVolumesToAdd transaction-safe
  * Swordfish: added "To: Creating" state
  * Swordfish: "Failed" state on unexpected response code
  * Swordfish: Fixed NOT_FOUND response handling in "volumeExists"
  * Swordfish: Actually calling the unexpectedRespCodeHandler
  * Swordfish: Decreased default timeout to 290 sec
  * Fixed race-condition in SF-driver and preventing DELETE with null volume-id
  * Swordfish: Fixed NPE
  * Swordfish: added configurable retry count and delay for 503 responses

  [ Rene Peinthor ]
  * storpool-freespace: fix null pointer exception if storage pool broken
  * controller: Add version mismatch satellites to the reconnector task
  * linstor-config,sql-script: read from stdin if no sql script was given
  * controller,ssl: resolve the keystore and trustdb file on config direct [...]
  * auto-place: do not try to deploy a diskless pool on any non SATELLITE  [...]
  * StateFlagsBits: allow more than one objectProtection
  * RscConn: Add flags to resource connections
  * RscCon: add a resource connection list API
  * StltResConDfnDriver: fix NPE
  * give swordfish target satellites a error report node name
  * swordfishtarget: create volume return is http 202
  * rsc-del: rework swordfish target check to a common diskfull/diskless check
  * drbdeventpublisher: remove unused method
  * use interfaces instead of implementation classes
  * swordfish-initiator: be more generous while deleting volumes
  * ctrlrscautoplaceapicallHandler: make isStorPoolUsable static
  * rsc-create: check storage pool if enough space is available
  * increase API_VERSION
  * swordfish-target: set log directory for error reports
  * linstorconfig: disable auto commit on sql-script command

  [ Robert Altnoeder ]
  * TcpConnectorService: Automatic fallback from loopback/anylocal IPv6 to IPv4

 -- Rene Peinthor <rene.peinthor@linbit.com>  Tue, 30 Oct 2018 10:30:35 +0100

linstor-server (0.6.5-1) experimental; urgency=medium

  [ Roland Kammerer ]
  * build,rpm: add myself back to changelog

  [ Robert Altnoeder ]
  * Added message size statistics
  * Adjusted CmdRunDeviceManager to changes in the device manager
  * Removed compile-time debugging from GenericTimer
  * API processing: bounds on active worker threads and queue size
  * Error reporting: Fixed DspRptLst debug command, replaced string litera [...]
  * Code cleanup
  * Fixed CmdDisplayReport: Adjusted to new instanceId format
  * CmdRunDeviceManager: Mark resources for update instead of resource def [...]
  * CmdRunDeviceManager: add a noop subscriber to the Flux object

  [ Rene Peinthor ]
  * apply-rsc-changes: Fix NPE if non existing rscconn is accessed
  * apicallreply: add occurred error report id to the api call respond
  * peer: set an PeerOffline for CONTROLLER | AUX node types
  * picocli: upgrade to version 3.6.0
  * cmdl-parsing: split common commandline parser into stlt and ctrl
  * make: create jar.deps depending on build.gradle
  * zfsthin: fix zfs thin reporting FAT provisioning
  * drbddevicehandler: allow deleting of resource with broken storage pool
  * thin_sync: fix initial thin resync

  [ Gabor Hernadi ]
  * Every api-message triggers a pongReceived()
  * Fixed possible NPE
  * Fixed ConcurrentModificationException
  * Removed unnecessary payload from ChangedController API
  * Fixed wrong SwordfishUserPw assignment typo
  * Increased swordfish timeout to 300 sec
  * Fixed swordfish stlt-port availability checking
  * PriorityProps: added renderRelativeMap method
  * Cleanups and minor changes required for DevLayers
  * Included Peer description in ErrorReporting
  * Fixed possible NPE
  * Extracted common swordfish methods
  * Updates to controller-props now re-configures ALL storDrivers
  * Removed incorrect and misleading comment

  [ Joel Colledge ]
  * Remove unnecessary defer wrapping
  * Remove barely used ScopeRunner convenience methods
  * Allow an arbitrary number of API calls to run simultaneously
  * Delete using reactive approach
  * Remove internal deletion notification messages which are no longer used
  * Automatically include the op return code fields and object references  [...]
  * Remove the volume clean flag which is no longer set
  * Respond to 'changed' calls which cause the dispatch of a given resourc [...]
  * Notify connection listeners after disconnecting a deleted node
  * Include peer in test error reporter header
  * Only initiate an initial sync when the DRBD meta data is new
  * Avoid deleting resources while iterating over them
  * Respond with separate errors for each storage pool when getting the fr [...]

 -- Rene Peinthor <rene.peinthor@linbit.com>  Tue, 02 Oct 2018 08:13:02 +0200

linstor-server (0.6.4-1) experimental; urgency=medium

  [ Rene Peinthor ]
  * zfsdriver-sizes: catch NumberformatException
  * CommonSerializer: add parseApiCallRc method
  * list-storpool: forward satellite errors to client
  * storage-driver: improve invalid configuration message
  * satellite: Allow a successful full sync with broken storage pool
  * linstor-common: improve the chance the atomic move will work
  * gradle: specify output file of versionInfo task
  * resource: add isDiskless() method
  * drbdDeviceHandler: do not attempt to generated metadata for diskless
  * error-reports: rework instance id

  [ Robert Altnoeder ]
  * Added nbproject to .gitignore, deleted build-impl.xml from index
  * Added class MdSuperblockBuffer
  * Added an additional check for DRBD meta data

  [ Gabor Hernadi ]
  * Fixed race condition in DevMgr

  [ Roland Kammerer ]
  * build,rpm: generate noarch packages

 -- Rene Peinthor <rene.peinthor@linbit.com>  Fri, 14 Sep 2018 08:58:59 +0200

linstor-server (0.6.3-1) experimental; urgency=medium

  [ Rene Peinthor ]
  * linstor-config: make sure the LINSTOR schema is set
  * nodeapidata: use ConnectionStatus enum
  * err-list: Fix null pointer exception if node not connected
  * storpool-list: fix diskless storpool filtering
  * zfsdriver: fix incorrect total capacity reporting
  * zfsdriver: fix total capacity for sub datasets
  * zfsthindriver: add zfs thin driver
  * satellite: atomically write drbd res files
  * tests: fix guice SF_TARGET_PORT_POOL mock
  * swordfishtarget: resolve satellite start binary from class path
  * swordfishtarget: don't fail controller startup
  * node-lost: fix resource definition in delete state

  [ Gabor Hernadi ]
  * Added timeout for respawning drbd events2 stream
  * Fixed access to deleted volume
  * Removed special treatment for default diskless storage pool
  * Added whitelist storage drivers per node type
  * Fixed tests
  * Fixed controller: establishing connection to swordfish_target
  * Added --bind-address argument
  * Added swordfish_target node creation API
  * Fixed potential ConcurrentModificationException
  * Added .res file testing
  * Fixed satellite disconnect when extCmd takes long

 -- Rene Peinthor <rene.peinthor@linbit.com>  Mon, 10 Sep 2018 14:28:42 +0200

linstor-server (0.6.2-1) experimental; urgency=medium

  [ Gabor Hernadi ]
  * SwordfishTargetDriver: removes vlmDfn entry on deleteVolume
  * Ctrl: do not connect to Ctrl or Aux nodes

  [ Rene Peinthor ]
  * Fix missing SEC_ACL_MAP entries for freespacemgrs

 -- Rene Peinthor <rene.peinthor@linbit.com>  Mon, 03 Sep 2018 15:07:42 +0200

linstor-server (0.6.1-1) experimental; urgency=medium

  [ Rene Peinthor ]
  * gradle: also add lib/* to linstor-config cp tool startup script
  * db: fix broken freespace manager migration script
  * Fix NPE if node currently doesn't have a peer

  [ Gabor Hernadi ]
  * Added 1 hour db-connection idle timeout

 -- Rene Peinthor <rene.peinthor@linbit.com>  Mon, 03 Sep 2018 11:07:48 +0200

linstor-server (0.6.0-1) experimental; urgency=medium

  [ Joel Colledge ]
  * Create resource using reactive approach
  * Clear up resource create name validation
  * Correct resource modified message
  * Resolve storage pool at volume creation
  * Fix querying of LVM thin pool total capacity
  * Add API to add a disk to a diskless resource
  * Fix tests to expect new disk add flags
  * Add API to remove a disk making a resource diskless
  * Fall back to default when the free space manager name is empty
  * Avoid tracking free space on satellites and ensure storage pools on di [...]
  * Fix resource deletion by not tracking pending volume deletion
  * Drop buffered messages when the peer is no longer connected
  * Avoid contacting satellites before committing node deletion and loss
  * Add object protection for free space managers for existing storage poo [...]
  * Remove storage pool property which just duplicated the storage pool name
  * Send resources to satellites even when they have no volumes
  * Make generation of API classes a dependency of the server subproject r [...]
  * Do not expect resources that are diskless everywhere to ever be ready
  * Improve messages for resource create and toggle disk
  * Fix resource create API test so that it expects the warning for no volumes
  * Add property normalization step so that boolean properties are easier  [...]
  * Add property to allow underlying volume to be larger than expected
  * Differentiate between yes/no and true/false booleans
  * Fix resource create peer added message
  * Make sure toggle disk continues even if it was stopped while the trans [...]
  * Remove toggle disk notification messages when for updates that don't h [...]
  * Add support for resources without DRBD determined by storage driver kind

  [ Rene Peinthor ]
  * make: do not transform symlinks
  * remove nebula.ospackage plugin
  * work with symlinks for offline builds
  * gradle/controller: add all jars in lib/ to classpath
  * gradle: remove duplicate startup tasks
  * linstorconfig: add command to run sql scripts
  * sql: fix incorrect storage pool name length

  [ Gabor Hernadi ]
  * .gitignore: added eclipse-specific paths
  * Removed unnecessary casts to StorPoolData
  * Added realSize to VolumeData
  * Added shared StorPools
  * Extracted crypt feature to separate class / interface
  * Added swordfish storage driver
  * Removed unnecessary FIXME from ExtCmd
  * Fixed property bug
  * Added finer tuning options for swordfish driver
  * Fixed exception when swordfish.json is empty
  * Fixed wrong swordfish KEY references in submodule
  * Fixed minor swordfish bugs
  * Swordfish: added synchronization for persisting JSON data
  * Swordfish: driver can now continue with half-created volume
  * Fixed source snapshotname from migrated resource
  * Added -k or --keep-res argument
  * StorageDrivers can now write into VolumeDefinition's Props
  * Split SwordfishDriver into *TargetDriver and *InitiatorDriver
  * Added --port and --skip-hostname-check CLI args
  * Fixed broken tests
  * SwordfishDriver: added additional check

 -- Rene Peinthor <rene.peinthor@linbit.com>  Fri, 31 Aug 2018 13:01:18 +0200

linstor-server (0.5.0-1) experimental; urgency=medium

  [ Joel Colledge ]
  * Collect real free space information from LVM thin pools
  * Extract satellite updating from AbsApiCallHandler
  * Extract name parsing utils from AbsApiCallHandler
  * Extract response utils from AbsApiCallHandler
  * Extract props methods from AbsApiCallHandler
  * Delete unused classes
  * Extract transaction commit method from AbsApiCallHandler
  * Load directly from parent objects instead of using factories
  * Remove AbsApiCallHandler
  * Fix some checkstyle warnings in the controller API call handling code
  * Simplify tracking of resources to dispatch
  * Remove the direct dependency of WorkerPool on DbConnectionPool
  * Remove the direct dependency of ControllerTransactionMgr on DbConnectionPool
  * Move DB classes into the controller project
  * Move DB migration resources into the controller project
  * Simplify tracking of resources to dispatch
  * Load controller and satellite props at startup
  * Load DB objects at startup
  * Start the DB and load security objects explicitly at startup
  * Initialize number pools at startup
  * Initialize diskless stor pool at startup
  * Fix test that expected the default stor pool which is no longer used i [...]
  * Fix starting the controller without the debug console
  * Introduce reactor, using it to collect free space from storage pools
  * Ensure that the satellite exits with a non-zero exit code when it fail [...]
  * Allow the node ID to be overridden when creating resources
  * Integrate the events system with reactor

  [ Rene Peinthor ]
  * netif: add stlt port and encryption type in protobuf messages
  * error-report: show node name in report
  * move RANGE_PATTERN to a better location
  * cleanup imports
  * move CONTROLLER_PROPS, SATELLITE_PROPS identifier to LinStor class
  * use LinStor.SATELLITE_PROPS instead of SatelliteCoreModule.
  * split project into server, satellite, controller sub-projects
  * move LinstorConfig to controller project
  * move database dependencies to controller project
  * set same version for all subprojects
  * copy libraries from all sub-projects
  * gradle: fix deprecated syntax
  * git: explicit .gitignore file
  * gradle: enable the idea plugin
  * unittests: generate error logs into `build/test-logs`
  * code cleanup
  * storpool: update satellites that their storagepool was deleted.
  * conffilebuilder: write peer-device options to common conf
  * conffilebuilder: allow setting of peer-device options on rscdfn
  * conffilebuilder: fix missing option section for resource options
  * deb: correctly distribute .jar files to packages
  * rpm: correctly distribute jar files to packages
  * SslTcpConnectorPeer: remove unused msgState assignment
  * TcpConnectorPeer: use nextInMessage() method to update msg counter
  * error-report-api: redone with reactive library
  * update submodule ref
  * conffilebuilder: fix duplicate disk section in connection section
  * database: add support for mariadb/mysql
  * allow new-peer('net') options on resource connections
  * satellite: change linstor drbd.res file directory to /var/lib/linstor.d
  * report total capacity for storage pools
  * storpool: rename free_space to free_capacity
  * linstor-config: improve error message on invalid database.cfg file
  * bump api version to 2

  [ Gabor Hernadi ]
  * Rework netcom implemenation, fixes SSL communication

  [ Roland Kammerer ]
  * build: add drbd-utils as dependency for satellite
  * build: add proper rpm packaging
  * build,rpm: use more idiomatic vars
  * diffcopy.py: add file

 -- Rene Peinthor <rene.peinthor@linbit.com>  Thu, 16 Aug 2018 09:58:55 +0200

linstor-server (0.2.6-1) experimental; urgency=medium

  [ Rene Peinthor ]
  * cmd-parser: don't fail if config directory doesn't exist

 -- Rene Peinthor <rene.peinthor@linbit.com>  Tue, 24 Jul 2018 13:43:44 +0200

linstor-server (0.2.5-1) experimental; urgency=medium

  [ Joel Colledge ]
  * Check for the protoc binary when executing the task rather than when c [...]
  * Tidy up Java generation tasks
  * Explicitly exclude Java generation from the debian build rules because [...]

  [ Roland Kammerer ]
  * debian: add python as builddep

  [ Rene Peinthor ]
  * resourcedfn: add hasDiskless method
  * rscdfn: only remove the primary flag if rscdfn is not deleted anyway
  * rscdfn: on delete first try to delete diskless resources
  * make the error (which it isn't) a warning

 -- Rene Peinthor <rene.peinthor@linbit.com>  Fri, 20 Jul 2018 08:01:28 +0200

linstor-server (0.2.4-1) experimental; urgency=medium

  [ Joel Colledge ]
  * Enable resize of underlying storage volumes
  * Enable resize of DRBD volumes
  * Add a volume definition resize flag so that the client can show a resi [...]
  * Fix storage driver tests to match behavior introduced for volume resize
  * Explain unexpected resize size situation
  * Use driver kind provisioning trait instead of duplicated trait in driver
  * Do not send restored resources to satellites when no volumes are present
  * Fix prioritization of storage pools with more free space when auto-placing.
  * Do not send any free space for LVM thin pools because the data is not useful
  * Indicate in the max volume size query whether the pool is thin
  * Allow auto-placement in thin pools even though they have unknown free space.
  * Error message when loading a node should not depend on current API call type
  * Simplify API call handler answering and error handling helpers
  * Remove variables from API call response since the original format stri [...]
  * Remove mutable state from controller API call handlers
  * Use 'register' terminology for entity creation when the entity has a c [...]
  * Do not try to auto-place on nodes which are not connected
  * Fix auto-place test such that the mock peer is connected
  * Simplify logic for auto-place selection based on property values
  * Remove unnecessary driver loading method.
  * Check for the protoc binary when executing the task rather than when c [...]

  [ Gabor Hernadi ]
  * Add OverrideVlmId property
  * Fix: Initial drbd status
  * Moved apicallhandlers in dedicated packages
  * Extract auto-select feature
  * Add qryMaxVlmSize feature
  * Fixed wrong proto msg for maxSize-reply
  * Extracted AutoSelectFilter-ProtoMsg
  * Add disklessOnRemaining for RscAutoPlace
  * Fix: LvmDriver
  * Unified internal structures in AutoSelector
  * Made AutoPlace idempotent.
  * Refactored AutoPlace calling CtrlRscApiCallHandler
  * ConfFileBuilder
  * Improved error reporting for AbsStorDriver.delete
  * Fixed hung resource creation
  * Fixed object order when requesting changed data
  * Fixed potential nullpointer access
  * DrbdDeviceHandler tries 'drbdsetup down' more eagerly

  [ Rene Peinthor ]
  * api-serialization: remove a layer of abstraction
  * stlt/hostname: add hostname satellite api call
  * allow sub datasets to be used for zfs storage pools
  * Fix incorrect checking of zfs extend size [BREAKS old ZFS]
  * maxvlmsize: fix incorrect protobuf deserialization
  * gradle-rpm: add firewalld service files for linstor and drbd
  * proto-api: send parser apicall error if protobuf parsing failed
  * gradle: simplify startscript creation
  * gradle: fix missing start scripts in .tar/.zip
  * commandline: add --logs and rework --controller-directory
  * rsc-list: filter resources states data too
  * rscapi: fix access to deleted data
  * drbdevents: volume destroyed was also send for destroyed peer connections
  * fix incorrect indention
  * event-generator: withSatelliteState should acquire a writeLock
  * ctrl-stlt: ensure no apply updates run while fullsync in progress
  * stltupdaterequester: do not access getLocalNode() for the controller Peer
  * remove unnecessary string concat

  [ Robert Altnoeder ]
  * Fix controller notification about deleted resources when free space re [...]
  * Hotfix: Report PROV_THIN for LvmThinDriver.
  * Added DRBD metadata generation ID generator
  * Generation of an initial DRBD current GI for each volume definition
  * Updated nbproject/build-impl.xml
  * Skip the initial sync of thinly provisioned volumes
  * Skip the resync when resizing thin provisioned volumes
  * Added exception handling comment, slightly optimized value parsing
  * Fixed potential unit index off by one when formatting very large size values
  * Unified ...utils.LockSupport & ...locks.MultiLock into com.linbit.lock [...]
  * Fixed error message for invalid resource name, added error reporting fields
  * Replaced Class.newInstance() call, which has been marked deprecated in [...]
  * Removed replaced Class.newInstance() call

  [ Roland Kammerer ]
  * move from /opt to /usr/share
  * build: don't include test-libs in release tarballs
  * debian: initial debian packaging
  * build: add "release" target
  * linstor-satellite.service: fix typo
  * debian: add postinstall script
  * debian: pkg split
  * initial docker integration
  * build: allow FORCE=1 for dockerimage target
  * Dockerfile: initial lbbuild integration
  * build: dockerpath target

 -- Joel Colledge <joel.colledge@linbit.com>  Tue, 17 Jul 2018 14:39:06 +0200

linstor-server (0.2.3-1) experimental; urgency=medium

  * initial release

 -- Roland Kammerer <roland.kammerer@linbit.com>  Wed, 06 Jun 2018 15:13:14 +0200
