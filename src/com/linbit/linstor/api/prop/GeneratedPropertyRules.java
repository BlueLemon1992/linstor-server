/*
 * This file was autogenerated by genproperties.py
 *
 * LINSTOR - management of distributed storage/DRBD9 resources
 * Copyright (C) 2017 - 2018  LINBIT HA-Solutions GmbH
 * Author: Rene Peinthor, Gabor Hernadi
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */

package com.linbit.linstor.api.prop;

import com.linbit.linstor.core.AbsApiCallHandler.LinStorObject;

import java.util.ArrayList;
import java.util.Arrays;
import java.util.Collections;
import java.util.List;
import java.util.Map;
import java.util.TreeMap;

public final class GeneratedPropertyRules
{
    public static List<Property> getWhitelistedProperties()
    {
        List<Property> propertyList = new ArrayList<>();
        propertyList.add(
            new PropertyBuilder()
                .name("after-sb-0pri")
                .internal("True")
                .keyStr("DrbdOptions/Net/after-sb-0pri")
                .type("symbol")
                .values(
                    "discard-least-changes",
                    "discard-local",
                    "discard-older-primary",
                    "discard-remote",
                    "discard-younger-primary",
                    "discard-zero-changes",
                    "disconnect"
                )
                .build()
        );
        propertyList.add(
            new PropertyBuilder()
                .name("after-sb-1pri")
                .internal("True")
                .keyStr("DrbdOptions/Net/after-sb-1pri")
                .type("symbol")
                .values(
                    "call-pri-lost-after-sb",
                    "consensus",
                    "discard-secondary",
                    "disconnect",
                    "violently-as0p"
                )
                .build()
        );
        propertyList.add(
            new PropertyBuilder()
                .name("after-sb-2pri")
                .internal("True")
                .keyStr("DrbdOptions/Net/after-sb-2pri")
                .type("symbol")
                .values(
                    "call-pri-lost-after-sb",
                    "disconnect",
                    "violently-as0p"
                )
                .build()
        );
        propertyList.add(
            new PropertyBuilder()
                .name("al-extents")
                .internal("True")
                .keyStr("DrbdOptions/Disk/al-extents")
                .max("65534")
                .min("67")
                .type("range")
                .build()
        );
        propertyList.add(
            new PropertyBuilder()
                .name("al-updates")
                .internal("True")
                .keyStr("DrbdOptions/Disk/al-updates")
                .type("boolean")
                .build()
        );
        propertyList.add(
            new PropertyBuilder()
                .name("allow-two-primaries")
                .internal("True")
                .keyStr("DrbdOptions/Net/allow-two-primaries")
                .type("boolean")
                .build()
        );
        propertyList.add(
            new PropertyBuilder()
                .name("always-asbp")
                .internal("True")
                .keyStr("DrbdOptions/Net/always-asbp")
                .type("boolean")
                .build()
        );
        propertyList.add(
            new PropertyBuilder()
                .name("auto-promote")
                .internal("True")
                .keyStr("DrbdOptions/Resource/auto-promote")
                .type("boolean")
                .build()
        );
        propertyList.add(
            new PropertyBuilder()
                .name("auto-promote-timeout")
                .internal("True")
                .keyStr("DrbdOptions/Resource/auto-promote-timeout")
                .max("600")
                .min("0")
                .type("range")
                .build()
        );
        propertyList.add(
            new PropertyBuilder()
                .name("bitmap")
                .internal("True")
                .keyStr("DrbdOptions/PeerDevice/bitmap")
                .type("boolean")
                .build()
        );
        propertyList.add(
            new PropertyBuilder()
                .name("c-delay-target")
                .internal("True")
                .keyStr("DrbdOptions/PeerDevice/c-delay-target")
                .max("100")
                .min("1")
                .type("range")
                .build()
        );
        propertyList.add(
            new PropertyBuilder()
                .name("c-fill-target")
                .internal("True")
                .keyStr("DrbdOptions/PeerDevice/c-fill-target")
                .max("1048576")
                .min("0")
                .type("range")
                .build()
        );
        propertyList.add(
            new PropertyBuilder()
                .name("c-max-rate")
                .internal("True")
                .keyStr("DrbdOptions/PeerDevice/c-max-rate")
                .max("4194304")
                .min("250")
                .type("range")
                .build()
        );
        propertyList.add(
            new PropertyBuilder()
                .name("c-min-rate")
                .internal("True")
                .keyStr("DrbdOptions/PeerDevice/c-min-rate")
                .max("4194304")
                .min("0")
                .type("range")
                .build()
        );
        propertyList.add(
            new PropertyBuilder()
                .name("c-plan-ahead")
                .internal("True")
                .keyStr("DrbdOptions/PeerDevice/c-plan-ahead")
                .max("300")
                .min("0")
                .type("range")
                .build()
        );
        propertyList.add(
            new PropertyBuilder()
                .name("congestion-extents")
                .internal("True")
                .keyStr("DrbdOptions/Net/congestion-extents")
                .max("65534")
                .min("67")
                .type("range")
                .build()
        );
        propertyList.add(
            new PropertyBuilder()
                .name("congestion-fill")
                .internal("True")
                .keyStr("DrbdOptions/Net/congestion-fill")
                .max("20971520")
                .min("0")
                .type("range")
                .build()
        );
        propertyList.add(
            new PropertyBuilder()
                .name("connect-int")
                .internal("True")
                .keyStr("DrbdOptions/Net/connect-int")
                .max("120")
                .min("1")
                .type("range")
                .build()
        );
        propertyList.add(
            new PropertyBuilder()
                .name("cpu-mask")
                .internal("True")
                .keyStr("DrbdOptions/Resource/cpu-mask")
                .type("string")
                .build()
        );
        propertyList.add(
            new PropertyBuilder()
                .name("cram-hmac-alg")
                .internal("True")
                .keyStr("DrbdOptions/Net/cram-hmac-alg")
                .type("string")
                .build()
        );
        propertyList.add(
            new PropertyBuilder()
                .name("csums-after-crash-only")
                .internal("True")
                .keyStr("DrbdOptions/Net/csums-after-crash-only")
                .type("boolean")
                .build()
        );
        propertyList.add(
            new PropertyBuilder()
                .name("csums-alg")
                .internal("True")
                .keyStr("DrbdOptions/Net/csums-alg")
                .type("string")
                .build()
        );
        propertyList.add(
            new PropertyBuilder()
                .name("data-integrity-alg")
                .internal("True")
                .keyStr("DrbdOptions/Net/data-integrity-alg")
                .type("string")
                .build()
        );
        propertyList.add(
            new PropertyBuilder()
                .name("disable-write-same")
                .internal("True")
                .keyStr("DrbdOptions/Disk/disable-write-same")
                .type("boolean")
                .build()
        );
        propertyList.add(
            new PropertyBuilder()
                .name("discard-zeroes-if-aligned")
                .internal("True")
                .keyStr("DrbdOptions/Disk/discard-zeroes-if-aligned")
                .type("boolean")
                .build()
        );
        propertyList.add(
            new PropertyBuilder()
                .name("disk-barrier")
                .internal("True")
                .keyStr("DrbdOptions/Disk/disk-barrier")
                .type("boolean")
                .build()
        );
        propertyList.add(
            new PropertyBuilder()
                .name("disk-drain")
                .internal("True")
                .keyStr("DrbdOptions/Disk/disk-drain")
                .type("boolean")
                .build()
        );
        propertyList.add(
            new PropertyBuilder()
                .name("disk-flushes")
                .internal("True")
                .keyStr("DrbdOptions/Disk/disk-flushes")
                .type("boolean")
                .build()
        );
        propertyList.add(
            new PropertyBuilder()
                .name("disk-timeout")
                .internal("True")
                .keyStr("DrbdOptions/Disk/disk-timeout")
                .max("6000")
                .min("0")
                .type("range")
                .build()
        );
        propertyList.add(
            new PropertyBuilder()
                .name("fencing")
                .internal("True")
                .keyStr("DrbdOptions/Net/fencing")
                .type("symbol")
                .values(
                    "dont-care",
                    "resource-and-stonith",
                    "resource-only"
                )
                .build()
        );
        propertyList.add(
            new PropertyBuilder()
                .name("ko-count")
                .internal("True")
                .keyStr("DrbdOptions/Net/ko-count")
                .max("200")
                .min("0")
                .type("range")
                .build()
        );
        propertyList.add(
            new PropertyBuilder()
                .name("max-buffers")
                .internal("True")
                .keyStr("DrbdOptions/Net/max-buffers")
                .max("131072")
                .min("32")
                .type("range")
                .build()
        );
        propertyList.add(
            new PropertyBuilder()
                .name("max-epoch-size")
                .internal("True")
                .keyStr("DrbdOptions/Net/max-epoch-size")
                .max("20000")
                .min("1")
                .type("range")
                .build()
        );
        propertyList.add(
            new PropertyBuilder()
                .name("max-io-depth")
                .internal("True")
                .keyStr("DrbdOptions/Resource/max-io-depth")
                .max("4294967295")
                .min("4")
                .type("range")
                .build()
        );
        propertyList.add(
            new PropertyBuilder()
                .name("md-flushes")
                .internal("True")
                .keyStr("DrbdOptions/Disk/md-flushes")
                .type("boolean")
                .build()
        );
        propertyList.add(
            new PropertyBuilder()
                .name("minor_nr_range")
                .info("Range for auto-allocation of volume minor numbers")
                .keyRef("KEY_MINOR_NR_AUTO_RANGE")
                .type("regex")
                .value("[0-9]+-[0-9]+")
                .build()
        );
        propertyList.add(
            new PropertyBuilder()
                .name("on-congestion")
                .internal("True")
                .keyStr("DrbdOptions/Net/on-congestion")
                .type("symbol")
                .values(
                    "block",
                    "disconnect",
                    "pull-ahead"
                )
                .build()
        );
        propertyList.add(
            new PropertyBuilder()
                .name("on-io-error")
                .internal("True")
                .keyStr("DrbdOptions/Disk/on-io-error")
                .type("symbol")
                .values(
                    "call-local-io-error",
                    "detach",
                    "pass_on"
                )
                .build()
        );
        propertyList.add(
            new PropertyBuilder()
                .name("on-no-data-accessible")
                .internal("True")
                .keyStr("DrbdOptions/Resource/on-no-data-accessible")
                .type("symbol")
                .values(
                    "io-error",
                    "suspend-io"
                )
                .build()
        );
        propertyList.add(
            new PropertyBuilder()
                .name("on-no-quorum")
                .internal("True")
                .keyStr("DrbdOptions/Resource/on-no-quorum")
                .type("symbol")
                .values(
                    "io-error",
                    "suspend-io"
                )
                .build()
        );
        propertyList.add(
            new PropertyBuilder()
                .name("peer-ack-delay")
                .internal("True")
                .keyStr("DrbdOptions/Resource/peer-ack-delay")
                .max("10000")
                .min("1")
                .type("range")
                .build()
        );
        propertyList.add(
            new PropertyBuilder()
                .name("peer-ack-window")
                .internal("True")
                .keyStr("DrbdOptions/Resource/peer-ack-window")
                .max("204800")
                .min("2048")
                .type("range")
                .build()
        );
        propertyList.add(
            new PropertyBuilder()
                .name("ping-int")
                .internal("True")
                .keyStr("DrbdOptions/Net/ping-int")
                .max("120")
                .min("1")
                .type("range")
                .build()
        );
        propertyList.add(
            new PropertyBuilder()
                .name("ping-timeout")
                .internal("True")
                .keyStr("DrbdOptions/Net/ping-timeout")
                .max("300")
                .min("1")
                .type("range")
                .build()
        );
        propertyList.add(
            new PropertyBuilder()
                .name("preferred_nic")
                .info("Preferred network interface to use")
                .keyRef("KEY_STOR_POOL_PREF_NIC")
                .type("regex")
                .value("^[a-zA-Z0-9_][a-zA-Z0-9_-]{2,47}$")
                .build()
        );
        propertyList.add(
            new PropertyBuilder()
                .name("protocol")
                .internal("True")
                .keyStr("DrbdOptions/Net/protocol")
                .type("symbol")
                .values(
                    "A",
                    "B",
                    "C"
                )
                .build()
        );
        propertyList.add(
            new PropertyBuilder()
                .name("quorum")
                .internal("True")
                .keyStr("DrbdOptions/Resource/quorum")
                .max("32")
                .min("1")
                .type("numeric-or-symbol")
                .values(
                    "all",
                    "majority",
                    "off"
                )
                .build()
        );
        propertyList.add(
            new PropertyBuilder()
                .name("rcvbuf-size")
                .internal("True")
                .keyStr("DrbdOptions/Net/rcvbuf-size")
                .max("10485760")
                .min("0")
                .type("range")
                .build()
        );
        propertyList.add(
            new PropertyBuilder()
                .name("read-balancing")
                .internal("True")
                .keyStr("DrbdOptions/Disk/read-balancing")
                .type("symbol")
                .values(
                    "128K-striping",
                    "1M-striping",
                    "256K-striping",
                    "32K-striping",
                    "512K-striping",
                    "64K-striping",
                    "least-pending",
                    "prefer-local",
                    "prefer-remote",
                    "round-robin",
                    "when-congested-remote"
                )
                .build()
        );
        propertyList.add(
            new PropertyBuilder()
                .name("resync-after")
                .internal("True")
                .keyStr("DrbdOptions/Disk/resync-after")
                .max("1048575")
                .min("-1")
                .type("range")
                .build()
        );
        propertyList.add(
            new PropertyBuilder()
                .name("resync-rate")
                .internal("True")
                .keyStr("DrbdOptions/PeerDevice/resync-rate")
                .max("4194304")
                .min("1")
                .type("range")
                .build()
        );
        propertyList.add(
            new PropertyBuilder()
                .name("rr-conflict")
                .internal("True")
                .keyStr("DrbdOptions/Net/rr-conflict")
                .type("symbol")
                .values(
                    "call-pri-lost",
                    "disconnect",
                    "violently"
                )
                .build()
        );
        propertyList.add(
            new PropertyBuilder()
                .name("rs-discard-granularity")
                .internal("True")
                .keyStr("DrbdOptions/Disk/rs-discard-granularity")
                .max("1048576")
                .min("0")
                .type("range")
                .build()
        );
        propertyList.add(
            new PropertyBuilder()
                .name("shared-secret")
                .internal("True")
                .keyStr("DrbdOptions/Net/shared-secret")
                .type("string")
                .build()
        );
        propertyList.add(
            new PropertyBuilder()
                .name("sndbuf-size")
                .internal("True")
                .keyStr("DrbdOptions/Net/sndbuf-size")
                .max("10485760")
                .min("0")
                .type("range")
                .build()
        );
        propertyList.add(
            new PropertyBuilder()
                .name("socket-check-timeout")
                .internal("True")
                .keyStr("DrbdOptions/Net/socket-check-timeout")
                .max("300")
                .min("0")
                .type("range")
                .build()
        );
        propertyList.add(
            new PropertyBuilder()
                .name("storage_pool_name")
                .keyRef("KEY_STOR_POOL_NAME")
                .type("regex")
                .value("^[a-zA-Z0-9_][a-zA-Z0-9_-]{2,47}$")
                .build()
        );
        propertyList.add(
            new PropertyBuilder()
                .name("stordriver_thinpool")
                .internal("True")
                .keyRef("NAMESPC_STORAGE_DRIVER", "KEY_STOR_POOL_THIN_POOL")
                .type("regex")
                .value("[a-zA-Z0-9_-]+")
                .build()
        );
        propertyList.add(
            new PropertyBuilder()
                .name("stordriver_volumegroup")
                .internal("True")
                .keyRef("NAMESPC_STORAGE_DRIVER", "KEY_STOR_POOL_VOLUME_GROUP")
                .type("regex")
                .value("[a-zA-Z0-9_-]+")
                .build()
        );
        propertyList.add(
            new PropertyBuilder()
                .name("stordriver_zpool")
                .internal("True")
                .keyRef("NAMESPC_STORAGE_DRIVER", "KEY_STOR_POOL_ZPOOL")
                .type("regex")
                .value("[a-zA-Z0-9_-]+")
                .build()
        );
        propertyList.add(
            new PropertyBuilder()
                .name("tcp-cork")
                .internal("True")
                .keyStr("DrbdOptions/Net/tcp-cork")
                .type("boolean")
                .build()
        );
        propertyList.add(
            new PropertyBuilder()
                .name("tcp_port_range")
                .info("Range for auto-allocation of resource TCP ports")
                .keyRef("KEY_TCP_PORT_AUTO_RANGE")
                .type("regex")
                .value("[0-9]+-[0-9]+")
                .build()
        );
        propertyList.add(
            new PropertyBuilder()
                .name("timeout")
                .internal("True")
                .keyStr("DrbdOptions/Net/timeout")
                .max("600")
                .min("1")
                .type("range")
                .build()
        );
        propertyList.add(
            new PropertyBuilder()
                .name("twopc-retry-timeout")
                .internal("True")
                .keyStr("DrbdOptions/Resource/twopc-retry-timeout")
                .max("50")
                .min("1")
                .type("range")
                .build()
        );
        propertyList.add(
            new PropertyBuilder()
                .name("twopc-timeout")
                .internal("True")
                .keyStr("DrbdOptions/Resource/twopc-timeout")
                .max("600")
                .min("50")
                .type("range")
                .build()
        );
        propertyList.add(
            new PropertyBuilder()
                .name("use-rle")
                .internal("True")
                .keyStr("DrbdOptions/Net/use-rle")
                .type("boolean")
                .build()
        );
        propertyList.add(
            new PropertyBuilder()
                .name("verify-alg")
                .internal("True")
                .keyStr("DrbdOptions/Net/verify-alg")
                .type("string")
                .build()
        );
        return propertyList;
    }
    public static Map<LinStorObject, List<String>> getWhitelistedRules()
    {
        Map<LinStorObject, List<String>> rules = new TreeMap<>();
        rules.put(LinStorObject.CONTROLLER,
            Arrays.asList(
                "after-sb-0pri",
                "after-sb-1pri",
                "after-sb-2pri",
                "al-extents",
                "al-updates",
                "allow-two-primaries",
                "always-asbp",
                "auto-promote",
                "auto-promote-timeout",
                "bitmap",
                "c-delay-target",
                "c-fill-target",
                "c-max-rate",
                "c-min-rate",
                "c-plan-ahead",
                "congestion-extents",
                "congestion-fill",
                "connect-int",
                "cpu-mask",
                "cram-hmac-alg",
                "csums-after-crash-only",
                "csums-alg",
                "data-integrity-alg",
                "disable-write-same",
                "discard-zeroes-if-aligned",
                "disk-barrier",
                "disk-drain",
                "disk-flushes",
                "disk-timeout",
                "fencing",
                "ko-count",
                "max-buffers",
                "max-epoch-size",
                "max-io-depth",
                "md-flushes",
                "minor_nr_range",
                "on-congestion",
                "on-io-error",
                "on-no-data-accessible",
                "on-no-quorum",
                "peer-ack-delay",
                "peer-ack-window",
                "ping-int",
                "ping-timeout",
                "protocol",
                "quorum",
                "rcvbuf-size",
                "read-balancing",
                "resync-after",
                "resync-rate",
                "rr-conflict",
                "rs-discard-granularity",
                "shared-secret",
                "sndbuf-size",
                "socket-check-timeout",
                "tcp-cork",
                "tcp_port_range",
                "timeout",
                "twopc-retry-timeout",
                "twopc-timeout",
                "use-rle",
                "verify-alg"
            )
        );
        rules.put(LinStorObject.NODE, Collections.emptyList());
        rules.put(LinStorObject.RESOURCE,
            Arrays.asList(
                "preferred_nic",
                "storage_pool_name"
            )
        );
        rules.put(LinStorObject.RESOURCE_DEFINITION,
            Arrays.asList(
                "after-sb-0pri",
                "after-sb-1pri",
                "after-sb-2pri",
                "al-extents",
                "al-updates",
                "allow-two-primaries",
                "always-asbp",
                "auto-promote",
                "auto-promote-timeout",
                "congestion-extents",
                "congestion-fill",
                "connect-int",
                "cpu-mask",
                "cram-hmac-alg",
                "csums-after-crash-only",
                "csums-alg",
                "data-integrity-alg",
                "disable-write-same",
                "discard-zeroes-if-aligned",
                "disk-barrier",
                "disk-drain",
                "disk-flushes",
                "disk-timeout",
                "fencing",
                "ko-count",
                "max-buffers",
                "max-epoch-size",
                "max-io-depth",
                "md-flushes",
                "on-congestion",
                "on-io-error",
                "on-no-data-accessible",
                "on-no-quorum",
                "peer-ack-delay",
                "peer-ack-window",
                "ping-int",
                "ping-timeout",
                "protocol",
                "quorum",
                "rcvbuf-size",
                "read-balancing",
                "resync-after",
                "rr-conflict",
                "rs-discard-granularity",
                "shared-secret",
                "sndbuf-size",
                "socket-check-timeout",
                "tcp-cork",
                "timeout",
                "twopc-retry-timeout",
                "twopc-timeout",
                "use-rle",
                "verify-alg"
            )
        );
        rules.put(LinStorObject.STORAGEPOOL,
            Arrays.asList(
                "preferred_nic",
                "stordriver_thinpool",
                "stordriver_volumegroup",
                "stordriver_zpool"
            )
        );
        rules.put(LinStorObject.STORAGEPOOL_DEFINITION, Collections.emptyList());
        rules.put(LinStorObject.VOLUME_DEFINITION,
            Arrays.asList(
                "al-extents",
                "al-updates",
                "disable-write-same",
                "discard-zeroes-if-aligned",
                "disk-barrier",
                "disk-drain",
                "disk-flushes",
                "disk-timeout",
                "md-flushes",
                "on-io-error",
                "read-balancing",
                "resync-after",
                "rs-discard-granularity"
            )
        );
        return rules;
    }
}
