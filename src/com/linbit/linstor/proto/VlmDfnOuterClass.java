// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: linstor/proto/VlmDfn.proto

package com.linbit.linstor.proto;

public final class VlmDfnOuterClass {
  private VlmDfnOuterClass() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }

  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
    registerAllExtensions(
        (com.google.protobuf.ExtensionRegistryLite) registry);
  }
  public interface VlmDfnOrBuilder extends
      // @@protoc_insertion_point(interface_extends:com.linbit.linstor.proto.VlmDfn)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * UUID
     * </pre>
     *
     * <code>optional string vlm_dfn_uuid = 1;</code>
     */
    boolean hasVlmDfnUuid();
    /**
     * <pre>
     * UUID
     * </pre>
     *
     * <code>optional string vlm_dfn_uuid = 1;</code>
     */
    java.lang.String getVlmDfnUuid();
    /**
     * <pre>
     * UUID
     * </pre>
     *
     * <code>optional string vlm_dfn_uuid = 1;</code>
     */
    com.google.protobuf.ByteString
        getVlmDfnUuidBytes();

    /**
     * <pre>
     * Volume number
     * null for automatic assignment
     * </pre>
     *
     * <code>optional sint32 vlm_nr = 2;</code>
     */
    boolean hasVlmNr();
    /**
     * <pre>
     * Volume number
     * null for automatic assignment
     * </pre>
     *
     * <code>optional sint32 vlm_nr = 2;</code>
     */
    int getVlmNr();

    /**
     * <pre>
     * Volume size (in kiB)
     * </pre>
     *
     * <code>required int64 vlm_size = 3;</code>
     */
    boolean hasVlmSize();
    /**
     * <pre>
     * Volume size (in kiB)
     * </pre>
     *
     * <code>required int64 vlm_size = 3;</code>
     */
    long getVlmSize();

    /**
     * <pre>
     * Volume minor number
     * null for automatic assignment
     * </pre>
     *
     * <code>optional sint32 vlm_minor = 4;</code>
     */
    boolean hasVlmMinor();
    /**
     * <pre>
     * Volume minor number
     * null for automatic assignment
     * </pre>
     *
     * <code>optional sint32 vlm_minor = 4;</code>
     */
    int getVlmMinor();

    /**
     * <pre>
     * Volume flags
     * </pre>
     *
     * <code>repeated string vlm_flags = 5;</code>
     */
    java.util.List<java.lang.String>
        getVlmFlagsList();
    /**
     * <pre>
     * Volume flags
     * </pre>
     *
     * <code>repeated string vlm_flags = 5;</code>
     */
    int getVlmFlagsCount();
    /**
     * <pre>
     * Volume flags
     * </pre>
     *
     * <code>repeated string vlm_flags = 5;</code>
     */
    java.lang.String getVlmFlags(int index);
    /**
     * <pre>
     * Volume flags
     * </pre>
     *
     * <code>repeated string vlm_flags = 5;</code>
     */
    com.google.protobuf.ByteString
        getVlmFlagsBytes(int index);

    /**
     * <pre>
     * Volume definition properties map
     * </pre>
     *
     * <code>repeated .com.linbit.linstor.proto.LinStorMapEntry vlm_props = 6;</code>
     */
    java.util.List<com.linbit.linstor.proto.LinStorMapEntryOuterClass.LinStorMapEntry> 
        getVlmPropsList();
    /**
     * <pre>
     * Volume definition properties map
     * </pre>
     *
     * <code>repeated .com.linbit.linstor.proto.LinStorMapEntry vlm_props = 6;</code>
     */
    com.linbit.linstor.proto.LinStorMapEntryOuterClass.LinStorMapEntry getVlmProps(int index);
    /**
     * <pre>
     * Volume definition properties map
     * </pre>
     *
     * <code>repeated .com.linbit.linstor.proto.LinStorMapEntry vlm_props = 6;</code>
     */
    int getVlmPropsCount();
    /**
     * <pre>
     * Volume definition properties map
     * </pre>
     *
     * <code>repeated .com.linbit.linstor.proto.LinStorMapEntry vlm_props = 6;</code>
     */
    java.util.List<? extends com.linbit.linstor.proto.LinStorMapEntryOuterClass.LinStorMapEntryOrBuilder> 
        getVlmPropsOrBuilderList();
    /**
     * <pre>
     * Volume definition properties map
     * </pre>
     *
     * <code>repeated .com.linbit.linstor.proto.LinStorMapEntry vlm_props = 6;</code>
     */
    com.linbit.linstor.proto.LinStorMapEntryOuterClass.LinStorMapEntryOrBuilder getVlmPropsOrBuilder(
        int index);
  }
  /**
   * <pre>
   * linstor - Volume definition message 
   * </pre>
   *
   * Protobuf type {@code com.linbit.linstor.proto.VlmDfn}
   */
  public  static final class VlmDfn extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:com.linbit.linstor.proto.VlmDfn)
      VlmDfnOrBuilder {
    // Use VlmDfn.newBuilder() to construct.
    private VlmDfn(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private VlmDfn() {
      vlmDfnUuid_ = "";
      vlmNr_ = 0;
      vlmSize_ = 0L;
      vlmMinor_ = 0;
      vlmFlags_ = com.google.protobuf.LazyStringArrayList.EMPTY;
      vlmProps_ = java.util.Collections.emptyList();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private VlmDfn(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              com.google.protobuf.ByteString bs = input.readBytes();
              bitField0_ |= 0x00000001;
              vlmDfnUuid_ = bs;
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              vlmNr_ = input.readSInt32();
              break;
            }
            case 24: {
              bitField0_ |= 0x00000004;
              vlmSize_ = input.readInt64();
              break;
            }
            case 32: {
              bitField0_ |= 0x00000008;
              vlmMinor_ = input.readSInt32();
              break;
            }
            case 42: {
              com.google.protobuf.ByteString bs = input.readBytes();
              if (!((mutable_bitField0_ & 0x00000010) == 0x00000010)) {
                vlmFlags_ = new com.google.protobuf.LazyStringArrayList();
                mutable_bitField0_ |= 0x00000010;
              }
              vlmFlags_.add(bs);
              break;
            }
            case 50: {
              if (!((mutable_bitField0_ & 0x00000020) == 0x00000020)) {
                vlmProps_ = new java.util.ArrayList<com.linbit.linstor.proto.LinStorMapEntryOuterClass.LinStorMapEntry>();
                mutable_bitField0_ |= 0x00000020;
              }
              vlmProps_.add(
                  input.readMessage(com.linbit.linstor.proto.LinStorMapEntryOuterClass.LinStorMapEntry.PARSER, extensionRegistry));
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000010) == 0x00000010)) {
          vlmFlags_ = vlmFlags_.getUnmodifiableView();
        }
        if (((mutable_bitField0_ & 0x00000020) == 0x00000020)) {
          vlmProps_ = java.util.Collections.unmodifiableList(vlmProps_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.linbit.linstor.proto.VlmDfnOuterClass.internal_static_com_linbit_linstor_proto_VlmDfn_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.linbit.linstor.proto.VlmDfnOuterClass.internal_static_com_linbit_linstor_proto_VlmDfn_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.linbit.linstor.proto.VlmDfnOuterClass.VlmDfn.class, com.linbit.linstor.proto.VlmDfnOuterClass.VlmDfn.Builder.class);
    }

    private int bitField0_;
    public static final int VLM_DFN_UUID_FIELD_NUMBER = 1;
    private volatile java.lang.Object vlmDfnUuid_;
    /**
     * <pre>
     * UUID
     * </pre>
     *
     * <code>optional string vlm_dfn_uuid = 1;</code>
     */
    public boolean hasVlmDfnUuid() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <pre>
     * UUID
     * </pre>
     *
     * <code>optional string vlm_dfn_uuid = 1;</code>
     */
    public java.lang.String getVlmDfnUuid() {
      java.lang.Object ref = vlmDfnUuid_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          vlmDfnUuid_ = s;
        }
        return s;
      }
    }
    /**
     * <pre>
     * UUID
     * </pre>
     *
     * <code>optional string vlm_dfn_uuid = 1;</code>
     */
    public com.google.protobuf.ByteString
        getVlmDfnUuidBytes() {
      java.lang.Object ref = vlmDfnUuid_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        vlmDfnUuid_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int VLM_NR_FIELD_NUMBER = 2;
    private int vlmNr_;
    /**
     * <pre>
     * Volume number
     * null for automatic assignment
     * </pre>
     *
     * <code>optional sint32 vlm_nr = 2;</code>
     */
    public boolean hasVlmNr() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <pre>
     * Volume number
     * null for automatic assignment
     * </pre>
     *
     * <code>optional sint32 vlm_nr = 2;</code>
     */
    public int getVlmNr() {
      return vlmNr_;
    }

    public static final int VLM_SIZE_FIELD_NUMBER = 3;
    private long vlmSize_;
    /**
     * <pre>
     * Volume size (in kiB)
     * </pre>
     *
     * <code>required int64 vlm_size = 3;</code>
     */
    public boolean hasVlmSize() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <pre>
     * Volume size (in kiB)
     * </pre>
     *
     * <code>required int64 vlm_size = 3;</code>
     */
    public long getVlmSize() {
      return vlmSize_;
    }

    public static final int VLM_MINOR_FIELD_NUMBER = 4;
    private int vlmMinor_;
    /**
     * <pre>
     * Volume minor number
     * null for automatic assignment
     * </pre>
     *
     * <code>optional sint32 vlm_minor = 4;</code>
     */
    public boolean hasVlmMinor() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <pre>
     * Volume minor number
     * null for automatic assignment
     * </pre>
     *
     * <code>optional sint32 vlm_minor = 4;</code>
     */
    public int getVlmMinor() {
      return vlmMinor_;
    }

    public static final int VLM_FLAGS_FIELD_NUMBER = 5;
    private com.google.protobuf.LazyStringList vlmFlags_;
    /**
     * <pre>
     * Volume flags
     * </pre>
     *
     * <code>repeated string vlm_flags = 5;</code>
     */
    public com.google.protobuf.ProtocolStringList
        getVlmFlagsList() {
      return vlmFlags_;
    }
    /**
     * <pre>
     * Volume flags
     * </pre>
     *
     * <code>repeated string vlm_flags = 5;</code>
     */
    public int getVlmFlagsCount() {
      return vlmFlags_.size();
    }
    /**
     * <pre>
     * Volume flags
     * </pre>
     *
     * <code>repeated string vlm_flags = 5;</code>
     */
    public java.lang.String getVlmFlags(int index) {
      return vlmFlags_.get(index);
    }
    /**
     * <pre>
     * Volume flags
     * </pre>
     *
     * <code>repeated string vlm_flags = 5;</code>
     */
    public com.google.protobuf.ByteString
        getVlmFlagsBytes(int index) {
      return vlmFlags_.getByteString(index);
    }

    public static final int VLM_PROPS_FIELD_NUMBER = 6;
    private java.util.List<com.linbit.linstor.proto.LinStorMapEntryOuterClass.LinStorMapEntry> vlmProps_;
    /**
     * <pre>
     * Volume definition properties map
     * </pre>
     *
     * <code>repeated .com.linbit.linstor.proto.LinStorMapEntry vlm_props = 6;</code>
     */
    public java.util.List<com.linbit.linstor.proto.LinStorMapEntryOuterClass.LinStorMapEntry> getVlmPropsList() {
      return vlmProps_;
    }
    /**
     * <pre>
     * Volume definition properties map
     * </pre>
     *
     * <code>repeated .com.linbit.linstor.proto.LinStorMapEntry vlm_props = 6;</code>
     */
    public java.util.List<? extends com.linbit.linstor.proto.LinStorMapEntryOuterClass.LinStorMapEntryOrBuilder> 
        getVlmPropsOrBuilderList() {
      return vlmProps_;
    }
    /**
     * <pre>
     * Volume definition properties map
     * </pre>
     *
     * <code>repeated .com.linbit.linstor.proto.LinStorMapEntry vlm_props = 6;</code>
     */
    public int getVlmPropsCount() {
      return vlmProps_.size();
    }
    /**
     * <pre>
     * Volume definition properties map
     * </pre>
     *
     * <code>repeated .com.linbit.linstor.proto.LinStorMapEntry vlm_props = 6;</code>
     */
    public com.linbit.linstor.proto.LinStorMapEntryOuterClass.LinStorMapEntry getVlmProps(int index) {
      return vlmProps_.get(index);
    }
    /**
     * <pre>
     * Volume definition properties map
     * </pre>
     *
     * <code>repeated .com.linbit.linstor.proto.LinStorMapEntry vlm_props = 6;</code>
     */
    public com.linbit.linstor.proto.LinStorMapEntryOuterClass.LinStorMapEntryOrBuilder getVlmPropsOrBuilder(
        int index) {
      return vlmProps_.get(index);
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      if (!hasVlmSize()) {
        memoizedIsInitialized = 0;
        return false;
      }
      for (int i = 0; i < getVlmPropsCount(); i++) {
        if (!getVlmProps(i).isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 1, vlmDfnUuid_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeSInt32(2, vlmNr_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeInt64(3, vlmSize_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeSInt32(4, vlmMinor_);
      }
      for (int i = 0; i < vlmFlags_.size(); i++) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 5, vlmFlags_.getRaw(i));
      }
      for (int i = 0; i < vlmProps_.size(); i++) {
        output.writeMessage(6, vlmProps_.get(i));
      }
      unknownFields.writeTo(output);
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, vlmDfnUuid_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeSInt32Size(2, vlmNr_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(3, vlmSize_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeSInt32Size(4, vlmMinor_);
      }
      {
        int dataSize = 0;
        for (int i = 0; i < vlmFlags_.size(); i++) {
          dataSize += computeStringSizeNoTag(vlmFlags_.getRaw(i));
        }
        size += dataSize;
        size += 1 * getVlmFlagsList().size();
      }
      for (int i = 0; i < vlmProps_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(6, vlmProps_.get(i));
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof com.linbit.linstor.proto.VlmDfnOuterClass.VlmDfn)) {
        return super.equals(obj);
      }
      com.linbit.linstor.proto.VlmDfnOuterClass.VlmDfn other = (com.linbit.linstor.proto.VlmDfnOuterClass.VlmDfn) obj;

      boolean result = true;
      result = result && (hasVlmDfnUuid() == other.hasVlmDfnUuid());
      if (hasVlmDfnUuid()) {
        result = result && getVlmDfnUuid()
            .equals(other.getVlmDfnUuid());
      }
      result = result && (hasVlmNr() == other.hasVlmNr());
      if (hasVlmNr()) {
        result = result && (getVlmNr()
            == other.getVlmNr());
      }
      result = result && (hasVlmSize() == other.hasVlmSize());
      if (hasVlmSize()) {
        result = result && (getVlmSize()
            == other.getVlmSize());
      }
      result = result && (hasVlmMinor() == other.hasVlmMinor());
      if (hasVlmMinor()) {
        result = result && (getVlmMinor()
            == other.getVlmMinor());
      }
      result = result && getVlmFlagsList()
          .equals(other.getVlmFlagsList());
      result = result && getVlmPropsList()
          .equals(other.getVlmPropsList());
      result = result && unknownFields.equals(other.unknownFields);
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasVlmDfnUuid()) {
        hash = (37 * hash) + VLM_DFN_UUID_FIELD_NUMBER;
        hash = (53 * hash) + getVlmDfnUuid().hashCode();
      }
      if (hasVlmNr()) {
        hash = (37 * hash) + VLM_NR_FIELD_NUMBER;
        hash = (53 * hash) + getVlmNr();
      }
      if (hasVlmSize()) {
        hash = (37 * hash) + VLM_SIZE_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
            getVlmSize());
      }
      if (hasVlmMinor()) {
        hash = (37 * hash) + VLM_MINOR_FIELD_NUMBER;
        hash = (53 * hash) + getVlmMinor();
      }
      if (getVlmFlagsCount() > 0) {
        hash = (37 * hash) + VLM_FLAGS_FIELD_NUMBER;
        hash = (53 * hash) + getVlmFlagsList().hashCode();
      }
      if (getVlmPropsCount() > 0) {
        hash = (37 * hash) + VLM_PROPS_FIELD_NUMBER;
        hash = (53 * hash) + getVlmPropsList().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static com.linbit.linstor.proto.VlmDfnOuterClass.VlmDfn parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.linbit.linstor.proto.VlmDfnOuterClass.VlmDfn parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.linbit.linstor.proto.VlmDfnOuterClass.VlmDfn parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.linbit.linstor.proto.VlmDfnOuterClass.VlmDfn parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.linbit.linstor.proto.VlmDfnOuterClass.VlmDfn parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.linbit.linstor.proto.VlmDfnOuterClass.VlmDfn parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.linbit.linstor.proto.VlmDfnOuterClass.VlmDfn parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static com.linbit.linstor.proto.VlmDfnOuterClass.VlmDfn parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.linbit.linstor.proto.VlmDfnOuterClass.VlmDfn parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.linbit.linstor.proto.VlmDfnOuterClass.VlmDfn parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.linbit.linstor.proto.VlmDfnOuterClass.VlmDfn prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * linstor - Volume definition message 
     * </pre>
     *
     * Protobuf type {@code com.linbit.linstor.proto.VlmDfn}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:com.linbit.linstor.proto.VlmDfn)
        com.linbit.linstor.proto.VlmDfnOuterClass.VlmDfnOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.linbit.linstor.proto.VlmDfnOuterClass.internal_static_com_linbit_linstor_proto_VlmDfn_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.linbit.linstor.proto.VlmDfnOuterClass.internal_static_com_linbit_linstor_proto_VlmDfn_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.linbit.linstor.proto.VlmDfnOuterClass.VlmDfn.class, com.linbit.linstor.proto.VlmDfnOuterClass.VlmDfn.Builder.class);
      }

      // Construct using com.linbit.linstor.proto.VlmDfnOuterClass.VlmDfn.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
          getVlmPropsFieldBuilder();
        }
      }
      public Builder clear() {
        super.clear();
        vlmDfnUuid_ = "";
        bitField0_ = (bitField0_ & ~0x00000001);
        vlmNr_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        vlmSize_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000004);
        vlmMinor_ = 0;
        bitField0_ = (bitField0_ & ~0x00000008);
        vlmFlags_ = com.google.protobuf.LazyStringArrayList.EMPTY;
        bitField0_ = (bitField0_ & ~0x00000010);
        if (vlmPropsBuilder_ == null) {
          vlmProps_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000020);
        } else {
          vlmPropsBuilder_.clear();
        }
        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.linbit.linstor.proto.VlmDfnOuterClass.internal_static_com_linbit_linstor_proto_VlmDfn_descriptor;
      }

      public com.linbit.linstor.proto.VlmDfnOuterClass.VlmDfn getDefaultInstanceForType() {
        return com.linbit.linstor.proto.VlmDfnOuterClass.VlmDfn.getDefaultInstance();
      }

      public com.linbit.linstor.proto.VlmDfnOuterClass.VlmDfn build() {
        com.linbit.linstor.proto.VlmDfnOuterClass.VlmDfn result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.linbit.linstor.proto.VlmDfnOuterClass.VlmDfn buildPartial() {
        com.linbit.linstor.proto.VlmDfnOuterClass.VlmDfn result = new com.linbit.linstor.proto.VlmDfnOuterClass.VlmDfn(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.vlmDfnUuid_ = vlmDfnUuid_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.vlmNr_ = vlmNr_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.vlmSize_ = vlmSize_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.vlmMinor_ = vlmMinor_;
        if (((bitField0_ & 0x00000010) == 0x00000010)) {
          vlmFlags_ = vlmFlags_.getUnmodifiableView();
          bitField0_ = (bitField0_ & ~0x00000010);
        }
        result.vlmFlags_ = vlmFlags_;
        if (vlmPropsBuilder_ == null) {
          if (((bitField0_ & 0x00000020) == 0x00000020)) {
            vlmProps_ = java.util.Collections.unmodifiableList(vlmProps_);
            bitField0_ = (bitField0_ & ~0x00000020);
          }
          result.vlmProps_ = vlmProps_;
        } else {
          result.vlmProps_ = vlmPropsBuilder_.build();
        }
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.linbit.linstor.proto.VlmDfnOuterClass.VlmDfn) {
          return mergeFrom((com.linbit.linstor.proto.VlmDfnOuterClass.VlmDfn)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.linbit.linstor.proto.VlmDfnOuterClass.VlmDfn other) {
        if (other == com.linbit.linstor.proto.VlmDfnOuterClass.VlmDfn.getDefaultInstance()) return this;
        if (other.hasVlmDfnUuid()) {
          bitField0_ |= 0x00000001;
          vlmDfnUuid_ = other.vlmDfnUuid_;
          onChanged();
        }
        if (other.hasVlmNr()) {
          setVlmNr(other.getVlmNr());
        }
        if (other.hasVlmSize()) {
          setVlmSize(other.getVlmSize());
        }
        if (other.hasVlmMinor()) {
          setVlmMinor(other.getVlmMinor());
        }
        if (!other.vlmFlags_.isEmpty()) {
          if (vlmFlags_.isEmpty()) {
            vlmFlags_ = other.vlmFlags_;
            bitField0_ = (bitField0_ & ~0x00000010);
          } else {
            ensureVlmFlagsIsMutable();
            vlmFlags_.addAll(other.vlmFlags_);
          }
          onChanged();
        }
        if (vlmPropsBuilder_ == null) {
          if (!other.vlmProps_.isEmpty()) {
            if (vlmProps_.isEmpty()) {
              vlmProps_ = other.vlmProps_;
              bitField0_ = (bitField0_ & ~0x00000020);
            } else {
              ensureVlmPropsIsMutable();
              vlmProps_.addAll(other.vlmProps_);
            }
            onChanged();
          }
        } else {
          if (!other.vlmProps_.isEmpty()) {
            if (vlmPropsBuilder_.isEmpty()) {
              vlmPropsBuilder_.dispose();
              vlmPropsBuilder_ = null;
              vlmProps_ = other.vlmProps_;
              bitField0_ = (bitField0_ & ~0x00000020);
              vlmPropsBuilder_ = 
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getVlmPropsFieldBuilder() : null;
            } else {
              vlmPropsBuilder_.addAllMessages(other.vlmProps_);
            }
          }
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        if (!hasVlmSize()) {
          return false;
        }
        for (int i = 0; i < getVlmPropsCount(); i++) {
          if (!getVlmProps(i).isInitialized()) {
            return false;
          }
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.linbit.linstor.proto.VlmDfnOuterClass.VlmDfn parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.linbit.linstor.proto.VlmDfnOuterClass.VlmDfn) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private java.lang.Object vlmDfnUuid_ = "";
      /**
       * <pre>
       * UUID
       * </pre>
       *
       * <code>optional string vlm_dfn_uuid = 1;</code>
       */
      public boolean hasVlmDfnUuid() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <pre>
       * UUID
       * </pre>
       *
       * <code>optional string vlm_dfn_uuid = 1;</code>
       */
      public java.lang.String getVlmDfnUuid() {
        java.lang.Object ref = vlmDfnUuid_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            vlmDfnUuid_ = s;
          }
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * UUID
       * </pre>
       *
       * <code>optional string vlm_dfn_uuid = 1;</code>
       */
      public com.google.protobuf.ByteString
          getVlmDfnUuidBytes() {
        java.lang.Object ref = vlmDfnUuid_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          vlmDfnUuid_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * UUID
       * </pre>
       *
       * <code>optional string vlm_dfn_uuid = 1;</code>
       */
      public Builder setVlmDfnUuid(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        vlmDfnUuid_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * UUID
       * </pre>
       *
       * <code>optional string vlm_dfn_uuid = 1;</code>
       */
      public Builder clearVlmDfnUuid() {
        bitField0_ = (bitField0_ & ~0x00000001);
        vlmDfnUuid_ = getDefaultInstance().getVlmDfnUuid();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * UUID
       * </pre>
       *
       * <code>optional string vlm_dfn_uuid = 1;</code>
       */
      public Builder setVlmDfnUuidBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        vlmDfnUuid_ = value;
        onChanged();
        return this;
      }

      private int vlmNr_ ;
      /**
       * <pre>
       * Volume number
       * null for automatic assignment
       * </pre>
       *
       * <code>optional sint32 vlm_nr = 2;</code>
       */
      public boolean hasVlmNr() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <pre>
       * Volume number
       * null for automatic assignment
       * </pre>
       *
       * <code>optional sint32 vlm_nr = 2;</code>
       */
      public int getVlmNr() {
        return vlmNr_;
      }
      /**
       * <pre>
       * Volume number
       * null for automatic assignment
       * </pre>
       *
       * <code>optional sint32 vlm_nr = 2;</code>
       */
      public Builder setVlmNr(int value) {
        bitField0_ |= 0x00000002;
        vlmNr_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Volume number
       * null for automatic assignment
       * </pre>
       *
       * <code>optional sint32 vlm_nr = 2;</code>
       */
      public Builder clearVlmNr() {
        bitField0_ = (bitField0_ & ~0x00000002);
        vlmNr_ = 0;
        onChanged();
        return this;
      }

      private long vlmSize_ ;
      /**
       * <pre>
       * Volume size (in kiB)
       * </pre>
       *
       * <code>required int64 vlm_size = 3;</code>
       */
      public boolean hasVlmSize() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <pre>
       * Volume size (in kiB)
       * </pre>
       *
       * <code>required int64 vlm_size = 3;</code>
       */
      public long getVlmSize() {
        return vlmSize_;
      }
      /**
       * <pre>
       * Volume size (in kiB)
       * </pre>
       *
       * <code>required int64 vlm_size = 3;</code>
       */
      public Builder setVlmSize(long value) {
        bitField0_ |= 0x00000004;
        vlmSize_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Volume size (in kiB)
       * </pre>
       *
       * <code>required int64 vlm_size = 3;</code>
       */
      public Builder clearVlmSize() {
        bitField0_ = (bitField0_ & ~0x00000004);
        vlmSize_ = 0L;
        onChanged();
        return this;
      }

      private int vlmMinor_ ;
      /**
       * <pre>
       * Volume minor number
       * null for automatic assignment
       * </pre>
       *
       * <code>optional sint32 vlm_minor = 4;</code>
       */
      public boolean hasVlmMinor() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <pre>
       * Volume minor number
       * null for automatic assignment
       * </pre>
       *
       * <code>optional sint32 vlm_minor = 4;</code>
       */
      public int getVlmMinor() {
        return vlmMinor_;
      }
      /**
       * <pre>
       * Volume minor number
       * null for automatic assignment
       * </pre>
       *
       * <code>optional sint32 vlm_minor = 4;</code>
       */
      public Builder setVlmMinor(int value) {
        bitField0_ |= 0x00000008;
        vlmMinor_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Volume minor number
       * null for automatic assignment
       * </pre>
       *
       * <code>optional sint32 vlm_minor = 4;</code>
       */
      public Builder clearVlmMinor() {
        bitField0_ = (bitField0_ & ~0x00000008);
        vlmMinor_ = 0;
        onChanged();
        return this;
      }

      private com.google.protobuf.LazyStringList vlmFlags_ = com.google.protobuf.LazyStringArrayList.EMPTY;
      private void ensureVlmFlagsIsMutable() {
        if (!((bitField0_ & 0x00000010) == 0x00000010)) {
          vlmFlags_ = new com.google.protobuf.LazyStringArrayList(vlmFlags_);
          bitField0_ |= 0x00000010;
         }
      }
      /**
       * <pre>
       * Volume flags
       * </pre>
       *
       * <code>repeated string vlm_flags = 5;</code>
       */
      public com.google.protobuf.ProtocolStringList
          getVlmFlagsList() {
        return vlmFlags_.getUnmodifiableView();
      }
      /**
       * <pre>
       * Volume flags
       * </pre>
       *
       * <code>repeated string vlm_flags = 5;</code>
       */
      public int getVlmFlagsCount() {
        return vlmFlags_.size();
      }
      /**
       * <pre>
       * Volume flags
       * </pre>
       *
       * <code>repeated string vlm_flags = 5;</code>
       */
      public java.lang.String getVlmFlags(int index) {
        return vlmFlags_.get(index);
      }
      /**
       * <pre>
       * Volume flags
       * </pre>
       *
       * <code>repeated string vlm_flags = 5;</code>
       */
      public com.google.protobuf.ByteString
          getVlmFlagsBytes(int index) {
        return vlmFlags_.getByteString(index);
      }
      /**
       * <pre>
       * Volume flags
       * </pre>
       *
       * <code>repeated string vlm_flags = 5;</code>
       */
      public Builder setVlmFlags(
          int index, java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  ensureVlmFlagsIsMutable();
        vlmFlags_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Volume flags
       * </pre>
       *
       * <code>repeated string vlm_flags = 5;</code>
       */
      public Builder addVlmFlags(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  ensureVlmFlagsIsMutable();
        vlmFlags_.add(value);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Volume flags
       * </pre>
       *
       * <code>repeated string vlm_flags = 5;</code>
       */
      public Builder addAllVlmFlags(
          java.lang.Iterable<java.lang.String> values) {
        ensureVlmFlagsIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, vlmFlags_);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Volume flags
       * </pre>
       *
       * <code>repeated string vlm_flags = 5;</code>
       */
      public Builder clearVlmFlags() {
        vlmFlags_ = com.google.protobuf.LazyStringArrayList.EMPTY;
        bitField0_ = (bitField0_ & ~0x00000010);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Volume flags
       * </pre>
       *
       * <code>repeated string vlm_flags = 5;</code>
       */
      public Builder addVlmFlagsBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  ensureVlmFlagsIsMutable();
        vlmFlags_.add(value);
        onChanged();
        return this;
      }

      private java.util.List<com.linbit.linstor.proto.LinStorMapEntryOuterClass.LinStorMapEntry> vlmProps_ =
        java.util.Collections.emptyList();
      private void ensureVlmPropsIsMutable() {
        if (!((bitField0_ & 0x00000020) == 0x00000020)) {
          vlmProps_ = new java.util.ArrayList<com.linbit.linstor.proto.LinStorMapEntryOuterClass.LinStorMapEntry>(vlmProps_);
          bitField0_ |= 0x00000020;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          com.linbit.linstor.proto.LinStorMapEntryOuterClass.LinStorMapEntry, com.linbit.linstor.proto.LinStorMapEntryOuterClass.LinStorMapEntry.Builder, com.linbit.linstor.proto.LinStorMapEntryOuterClass.LinStorMapEntryOrBuilder> vlmPropsBuilder_;

      /**
       * <pre>
       * Volume definition properties map
       * </pre>
       *
       * <code>repeated .com.linbit.linstor.proto.LinStorMapEntry vlm_props = 6;</code>
       */
      public java.util.List<com.linbit.linstor.proto.LinStorMapEntryOuterClass.LinStorMapEntry> getVlmPropsList() {
        if (vlmPropsBuilder_ == null) {
          return java.util.Collections.unmodifiableList(vlmProps_);
        } else {
          return vlmPropsBuilder_.getMessageList();
        }
      }
      /**
       * <pre>
       * Volume definition properties map
       * </pre>
       *
       * <code>repeated .com.linbit.linstor.proto.LinStorMapEntry vlm_props = 6;</code>
       */
      public int getVlmPropsCount() {
        if (vlmPropsBuilder_ == null) {
          return vlmProps_.size();
        } else {
          return vlmPropsBuilder_.getCount();
        }
      }
      /**
       * <pre>
       * Volume definition properties map
       * </pre>
       *
       * <code>repeated .com.linbit.linstor.proto.LinStorMapEntry vlm_props = 6;</code>
       */
      public com.linbit.linstor.proto.LinStorMapEntryOuterClass.LinStorMapEntry getVlmProps(int index) {
        if (vlmPropsBuilder_ == null) {
          return vlmProps_.get(index);
        } else {
          return vlmPropsBuilder_.getMessage(index);
        }
      }
      /**
       * <pre>
       * Volume definition properties map
       * </pre>
       *
       * <code>repeated .com.linbit.linstor.proto.LinStorMapEntry vlm_props = 6;</code>
       */
      public Builder setVlmProps(
          int index, com.linbit.linstor.proto.LinStorMapEntryOuterClass.LinStorMapEntry value) {
        if (vlmPropsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureVlmPropsIsMutable();
          vlmProps_.set(index, value);
          onChanged();
        } else {
          vlmPropsBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       * Volume definition properties map
       * </pre>
       *
       * <code>repeated .com.linbit.linstor.proto.LinStorMapEntry vlm_props = 6;</code>
       */
      public Builder setVlmProps(
          int index, com.linbit.linstor.proto.LinStorMapEntryOuterClass.LinStorMapEntry.Builder builderForValue) {
        if (vlmPropsBuilder_ == null) {
          ensureVlmPropsIsMutable();
          vlmProps_.set(index, builderForValue.build());
          onChanged();
        } else {
          vlmPropsBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * Volume definition properties map
       * </pre>
       *
       * <code>repeated .com.linbit.linstor.proto.LinStorMapEntry vlm_props = 6;</code>
       */
      public Builder addVlmProps(com.linbit.linstor.proto.LinStorMapEntryOuterClass.LinStorMapEntry value) {
        if (vlmPropsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureVlmPropsIsMutable();
          vlmProps_.add(value);
          onChanged();
        } else {
          vlmPropsBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <pre>
       * Volume definition properties map
       * </pre>
       *
       * <code>repeated .com.linbit.linstor.proto.LinStorMapEntry vlm_props = 6;</code>
       */
      public Builder addVlmProps(
          int index, com.linbit.linstor.proto.LinStorMapEntryOuterClass.LinStorMapEntry value) {
        if (vlmPropsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureVlmPropsIsMutable();
          vlmProps_.add(index, value);
          onChanged();
        } else {
          vlmPropsBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       * Volume definition properties map
       * </pre>
       *
       * <code>repeated .com.linbit.linstor.proto.LinStorMapEntry vlm_props = 6;</code>
       */
      public Builder addVlmProps(
          com.linbit.linstor.proto.LinStorMapEntryOuterClass.LinStorMapEntry.Builder builderForValue) {
        if (vlmPropsBuilder_ == null) {
          ensureVlmPropsIsMutable();
          vlmProps_.add(builderForValue.build());
          onChanged();
        } else {
          vlmPropsBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * Volume definition properties map
       * </pre>
       *
       * <code>repeated .com.linbit.linstor.proto.LinStorMapEntry vlm_props = 6;</code>
       */
      public Builder addVlmProps(
          int index, com.linbit.linstor.proto.LinStorMapEntryOuterClass.LinStorMapEntry.Builder builderForValue) {
        if (vlmPropsBuilder_ == null) {
          ensureVlmPropsIsMutable();
          vlmProps_.add(index, builderForValue.build());
          onChanged();
        } else {
          vlmPropsBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * Volume definition properties map
       * </pre>
       *
       * <code>repeated .com.linbit.linstor.proto.LinStorMapEntry vlm_props = 6;</code>
       */
      public Builder addAllVlmProps(
          java.lang.Iterable<? extends com.linbit.linstor.proto.LinStorMapEntryOuterClass.LinStorMapEntry> values) {
        if (vlmPropsBuilder_ == null) {
          ensureVlmPropsIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, vlmProps_);
          onChanged();
        } else {
          vlmPropsBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <pre>
       * Volume definition properties map
       * </pre>
       *
       * <code>repeated .com.linbit.linstor.proto.LinStorMapEntry vlm_props = 6;</code>
       */
      public Builder clearVlmProps() {
        if (vlmPropsBuilder_ == null) {
          vlmProps_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000020);
          onChanged();
        } else {
          vlmPropsBuilder_.clear();
        }
        return this;
      }
      /**
       * <pre>
       * Volume definition properties map
       * </pre>
       *
       * <code>repeated .com.linbit.linstor.proto.LinStorMapEntry vlm_props = 6;</code>
       */
      public Builder removeVlmProps(int index) {
        if (vlmPropsBuilder_ == null) {
          ensureVlmPropsIsMutable();
          vlmProps_.remove(index);
          onChanged();
        } else {
          vlmPropsBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <pre>
       * Volume definition properties map
       * </pre>
       *
       * <code>repeated .com.linbit.linstor.proto.LinStorMapEntry vlm_props = 6;</code>
       */
      public com.linbit.linstor.proto.LinStorMapEntryOuterClass.LinStorMapEntry.Builder getVlmPropsBuilder(
          int index) {
        return getVlmPropsFieldBuilder().getBuilder(index);
      }
      /**
       * <pre>
       * Volume definition properties map
       * </pre>
       *
       * <code>repeated .com.linbit.linstor.proto.LinStorMapEntry vlm_props = 6;</code>
       */
      public com.linbit.linstor.proto.LinStorMapEntryOuterClass.LinStorMapEntryOrBuilder getVlmPropsOrBuilder(
          int index) {
        if (vlmPropsBuilder_ == null) {
          return vlmProps_.get(index);  } else {
          return vlmPropsBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <pre>
       * Volume definition properties map
       * </pre>
       *
       * <code>repeated .com.linbit.linstor.proto.LinStorMapEntry vlm_props = 6;</code>
       */
      public java.util.List<? extends com.linbit.linstor.proto.LinStorMapEntryOuterClass.LinStorMapEntryOrBuilder> 
           getVlmPropsOrBuilderList() {
        if (vlmPropsBuilder_ != null) {
          return vlmPropsBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(vlmProps_);
        }
      }
      /**
       * <pre>
       * Volume definition properties map
       * </pre>
       *
       * <code>repeated .com.linbit.linstor.proto.LinStorMapEntry vlm_props = 6;</code>
       */
      public com.linbit.linstor.proto.LinStorMapEntryOuterClass.LinStorMapEntry.Builder addVlmPropsBuilder() {
        return getVlmPropsFieldBuilder().addBuilder(
            com.linbit.linstor.proto.LinStorMapEntryOuterClass.LinStorMapEntry.getDefaultInstance());
      }
      /**
       * <pre>
       * Volume definition properties map
       * </pre>
       *
       * <code>repeated .com.linbit.linstor.proto.LinStorMapEntry vlm_props = 6;</code>
       */
      public com.linbit.linstor.proto.LinStorMapEntryOuterClass.LinStorMapEntry.Builder addVlmPropsBuilder(
          int index) {
        return getVlmPropsFieldBuilder().addBuilder(
            index, com.linbit.linstor.proto.LinStorMapEntryOuterClass.LinStorMapEntry.getDefaultInstance());
      }
      /**
       * <pre>
       * Volume definition properties map
       * </pre>
       *
       * <code>repeated .com.linbit.linstor.proto.LinStorMapEntry vlm_props = 6;</code>
       */
      public java.util.List<com.linbit.linstor.proto.LinStorMapEntryOuterClass.LinStorMapEntry.Builder> 
           getVlmPropsBuilderList() {
        return getVlmPropsFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          com.linbit.linstor.proto.LinStorMapEntryOuterClass.LinStorMapEntry, com.linbit.linstor.proto.LinStorMapEntryOuterClass.LinStorMapEntry.Builder, com.linbit.linstor.proto.LinStorMapEntryOuterClass.LinStorMapEntryOrBuilder> 
          getVlmPropsFieldBuilder() {
        if (vlmPropsBuilder_ == null) {
          vlmPropsBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              com.linbit.linstor.proto.LinStorMapEntryOuterClass.LinStorMapEntry, com.linbit.linstor.proto.LinStorMapEntryOuterClass.LinStorMapEntry.Builder, com.linbit.linstor.proto.LinStorMapEntryOuterClass.LinStorMapEntryOrBuilder>(
                  vlmProps_,
                  ((bitField0_ & 0x00000020) == 0x00000020),
                  getParentForChildren(),
                  isClean());
          vlmProps_ = null;
        }
        return vlmPropsBuilder_;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:com.linbit.linstor.proto.VlmDfn)
    }

    // @@protoc_insertion_point(class_scope:com.linbit.linstor.proto.VlmDfn)
    private static final com.linbit.linstor.proto.VlmDfnOuterClass.VlmDfn DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new com.linbit.linstor.proto.VlmDfnOuterClass.VlmDfn();
    }

    public static com.linbit.linstor.proto.VlmDfnOuterClass.VlmDfn getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    @java.lang.Deprecated public static final com.google.protobuf.Parser<VlmDfn>
        PARSER = new com.google.protobuf.AbstractParser<VlmDfn>() {
      public VlmDfn parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
          return new VlmDfn(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<VlmDfn> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<VlmDfn> getParserForType() {
      return PARSER;
    }

    public com.linbit.linstor.proto.VlmDfnOuterClass.VlmDfn getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_com_linbit_linstor_proto_VlmDfn_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_com_linbit_linstor_proto_VlmDfn_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static  com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n\032linstor/proto/VlmDfn.proto\022\030com.linbit" +
      ".linstor.proto\032#linstor/proto/LinStorMap" +
      "Entry.proto\"\244\001\n\006VlmDfn\022\024\n\014vlm_dfn_uuid\030\001" +
      " \001(\t\022\016\n\006vlm_nr\030\002 \001(\021\022\020\n\010vlm_size\030\003 \002(\003\022\021" +
      "\n\tvlm_minor\030\004 \001(\021\022\021\n\tvlm_flags\030\005 \003(\t\022<\n\t" +
      "vlm_props\030\006 \003(\0132).com.linbit.linstor.pro" +
      "to.LinStorMapEntryP\000"
    };
    com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
        new com.google.protobuf.Descriptors.FileDescriptor.    InternalDescriptorAssigner() {
          public com.google.protobuf.ExtensionRegistry assignDescriptors(
              com.google.protobuf.Descriptors.FileDescriptor root) {
            descriptor = root;
            return null;
          }
        };
    com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
          com.linbit.linstor.proto.LinStorMapEntryOuterClass.getDescriptor(),
        }, assigner);
    internal_static_com_linbit_linstor_proto_VlmDfn_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_com_linbit_linstor_proto_VlmDfn_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_com_linbit_linstor_proto_VlmDfn_descriptor,
        new java.lang.String[] { "VlmDfnUuid", "VlmNr", "VlmSize", "VlmMinor", "VlmFlags", "VlmProps", });
    com.linbit.linstor.proto.LinStorMapEntryOuterClass.getDescriptor();
  }

  // @@protoc_insertion_point(outer_class_scope)
}
