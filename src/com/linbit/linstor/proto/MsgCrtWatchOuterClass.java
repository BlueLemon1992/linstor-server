// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: linstor/proto/MsgCrtWatch.proto

package com.linbit.linstor.proto;

public final class MsgCrtWatchOuterClass {
  private MsgCrtWatchOuterClass() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }

  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
    registerAllExtensions(
        (com.google.protobuf.ExtensionRegistryLite) registry);
  }
  public interface MsgCrtWatchOrBuilder extends
      // @@protoc_insertion_point(interface_extends:com.linbit.linstor.proto.MsgCrtWatch)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * Identifying number for this watch
     * Events for this watch will be sent with this watch_id
     * </pre>
     *
     * <code>required int32 watch_id = 1;</code>
     */
    boolean hasWatchId();
    /**
     * <pre>
     * Identifying number for this watch
     * Events for this watch will be sent with this watch_id
     * </pre>
     *
     * <code>required int32 watch_id = 1;</code>
     */
    int getWatchId();

    /**
     * <pre>
     * Filter: Only the named events
     * </pre>
     *
     * <code>optional string event_name = 2;</code>
     */
    boolean hasEventName();
    /**
     * <pre>
     * Filter: Only the named events
     * </pre>
     *
     * <code>optional string event_name = 2;</code>
     */
    java.lang.String getEventName();
    /**
     * <pre>
     * Filter: Only the named events
     * </pre>
     *
     * <code>optional string event_name = 2;</code>
     */
    com.google.protobuf.ByteString
        getEventNameBytes();

    /**
     * <pre>
     * Filter: Only events related to the resource definition with this name
     * </pre>
     *
     * <code>optional string resource_name = 3;</code>
     */
    boolean hasResourceName();
    /**
     * <pre>
     * Filter: Only events related to the resource definition with this name
     * </pre>
     *
     * <code>optional string resource_name = 3;</code>
     */
    java.lang.String getResourceName();
    /**
     * <pre>
     * Filter: Only events related to the resource definition with this name
     * </pre>
     *
     * <code>optional string resource_name = 3;</code>
     */
    com.google.protobuf.ByteString
        getResourceNameBytes();

    /**
     * <pre>
     * Filter: Only events related to this node
     * </pre>
     *
     * <code>optional string node_name = 4;</code>
     */
    boolean hasNodeName();
    /**
     * <pre>
     * Filter: Only events related to this node
     * </pre>
     *
     * <code>optional string node_name = 4;</code>
     */
    java.lang.String getNodeName();
    /**
     * <pre>
     * Filter: Only events related to this node
     * </pre>
     *
     * <code>optional string node_name = 4;</code>
     */
    com.google.protobuf.ByteString
        getNodeNameBytes();

    /**
     * <pre>
     * Whether to apply the volume number filter
     * </pre>
     *
     * <code>optional bool filter_by_volume_number = 5;</code>
     */
    boolean hasFilterByVolumeNumber();
    /**
     * <pre>
     * Whether to apply the volume number filter
     * </pre>
     *
     * <code>optional bool filter_by_volume_number = 5;</code>
     */
    boolean getFilterByVolumeNumber();

    /**
     * <pre>
     * Filter: Only events related to volumes and their definitions with this number (when filter_by_volume_number set)
     * </pre>
     *
     * <code>optional sint32 volume_number = 6;</code>
     */
    boolean hasVolumeNumber();
    /**
     * <pre>
     * Filter: Only events related to volumes and their definitions with this number (when filter_by_volume_number set)
     * </pre>
     *
     * <code>optional sint32 volume_number = 6;</code>
     */
    int getVolumeNumber();
  }
  /**
   * <pre>
   * linstor - Watch specific events
   * </pre>
   *
   * Protobuf type {@code com.linbit.linstor.proto.MsgCrtWatch}
   */
  public  static final class MsgCrtWatch extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:com.linbit.linstor.proto.MsgCrtWatch)
      MsgCrtWatchOrBuilder {
    // Use MsgCrtWatch.newBuilder() to construct.
    private MsgCrtWatch(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private MsgCrtWatch() {
      watchId_ = 0;
      eventName_ = "";
      resourceName_ = "";
      nodeName_ = "";
      filterByVolumeNumber_ = false;
      volumeNumber_ = 0;
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private MsgCrtWatch(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              watchId_ = input.readInt32();
              break;
            }
            case 18: {
              com.google.protobuf.ByteString bs = input.readBytes();
              bitField0_ |= 0x00000002;
              eventName_ = bs;
              break;
            }
            case 26: {
              com.google.protobuf.ByteString bs = input.readBytes();
              bitField0_ |= 0x00000004;
              resourceName_ = bs;
              break;
            }
            case 34: {
              com.google.protobuf.ByteString bs = input.readBytes();
              bitField0_ |= 0x00000008;
              nodeName_ = bs;
              break;
            }
            case 40: {
              bitField0_ |= 0x00000010;
              filterByVolumeNumber_ = input.readBool();
              break;
            }
            case 48: {
              bitField0_ |= 0x00000020;
              volumeNumber_ = input.readSInt32();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.linbit.linstor.proto.MsgCrtWatchOuterClass.internal_static_com_linbit_linstor_proto_MsgCrtWatch_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.linbit.linstor.proto.MsgCrtWatchOuterClass.internal_static_com_linbit_linstor_proto_MsgCrtWatch_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.linbit.linstor.proto.MsgCrtWatchOuterClass.MsgCrtWatch.class, com.linbit.linstor.proto.MsgCrtWatchOuterClass.MsgCrtWatch.Builder.class);
    }

    private int bitField0_;
    public static final int WATCH_ID_FIELD_NUMBER = 1;
    private int watchId_;
    /**
     * <pre>
     * Identifying number for this watch
     * Events for this watch will be sent with this watch_id
     * </pre>
     *
     * <code>required int32 watch_id = 1;</code>
     */
    public boolean hasWatchId() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <pre>
     * Identifying number for this watch
     * Events for this watch will be sent with this watch_id
     * </pre>
     *
     * <code>required int32 watch_id = 1;</code>
     */
    public int getWatchId() {
      return watchId_;
    }

    public static final int EVENT_NAME_FIELD_NUMBER = 2;
    private volatile java.lang.Object eventName_;
    /**
     * <pre>
     * Filter: Only the named events
     * </pre>
     *
     * <code>optional string event_name = 2;</code>
     */
    public boolean hasEventName() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <pre>
     * Filter: Only the named events
     * </pre>
     *
     * <code>optional string event_name = 2;</code>
     */
    public java.lang.String getEventName() {
      java.lang.Object ref = eventName_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          eventName_ = s;
        }
        return s;
      }
    }
    /**
     * <pre>
     * Filter: Only the named events
     * </pre>
     *
     * <code>optional string event_name = 2;</code>
     */
    public com.google.protobuf.ByteString
        getEventNameBytes() {
      java.lang.Object ref = eventName_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        eventName_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int RESOURCE_NAME_FIELD_NUMBER = 3;
    private volatile java.lang.Object resourceName_;
    /**
     * <pre>
     * Filter: Only events related to the resource definition with this name
     * </pre>
     *
     * <code>optional string resource_name = 3;</code>
     */
    public boolean hasResourceName() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <pre>
     * Filter: Only events related to the resource definition with this name
     * </pre>
     *
     * <code>optional string resource_name = 3;</code>
     */
    public java.lang.String getResourceName() {
      java.lang.Object ref = resourceName_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          resourceName_ = s;
        }
        return s;
      }
    }
    /**
     * <pre>
     * Filter: Only events related to the resource definition with this name
     * </pre>
     *
     * <code>optional string resource_name = 3;</code>
     */
    public com.google.protobuf.ByteString
        getResourceNameBytes() {
      java.lang.Object ref = resourceName_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        resourceName_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int NODE_NAME_FIELD_NUMBER = 4;
    private volatile java.lang.Object nodeName_;
    /**
     * <pre>
     * Filter: Only events related to this node
     * </pre>
     *
     * <code>optional string node_name = 4;</code>
     */
    public boolean hasNodeName() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <pre>
     * Filter: Only events related to this node
     * </pre>
     *
     * <code>optional string node_name = 4;</code>
     */
    public java.lang.String getNodeName() {
      java.lang.Object ref = nodeName_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          nodeName_ = s;
        }
        return s;
      }
    }
    /**
     * <pre>
     * Filter: Only events related to this node
     * </pre>
     *
     * <code>optional string node_name = 4;</code>
     */
    public com.google.protobuf.ByteString
        getNodeNameBytes() {
      java.lang.Object ref = nodeName_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        nodeName_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int FILTER_BY_VOLUME_NUMBER_FIELD_NUMBER = 5;
    private boolean filterByVolumeNumber_;
    /**
     * <pre>
     * Whether to apply the volume number filter
     * </pre>
     *
     * <code>optional bool filter_by_volume_number = 5;</code>
     */
    public boolean hasFilterByVolumeNumber() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    /**
     * <pre>
     * Whether to apply the volume number filter
     * </pre>
     *
     * <code>optional bool filter_by_volume_number = 5;</code>
     */
    public boolean getFilterByVolumeNumber() {
      return filterByVolumeNumber_;
    }

    public static final int VOLUME_NUMBER_FIELD_NUMBER = 6;
    private int volumeNumber_;
    /**
     * <pre>
     * Filter: Only events related to volumes and their definitions with this number (when filter_by_volume_number set)
     * </pre>
     *
     * <code>optional sint32 volume_number = 6;</code>
     */
    public boolean hasVolumeNumber() {
      return ((bitField0_ & 0x00000020) == 0x00000020);
    }
    /**
     * <pre>
     * Filter: Only events related to volumes and their definitions with this number (when filter_by_volume_number set)
     * </pre>
     *
     * <code>optional sint32 volume_number = 6;</code>
     */
    public int getVolumeNumber() {
      return volumeNumber_;
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      if (!hasWatchId()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt32(1, watchId_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 2, eventName_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 3, resourceName_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 4, nodeName_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeBool(5, filterByVolumeNumber_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        output.writeSInt32(6, volumeNumber_);
      }
      unknownFields.writeTo(output);
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, watchId_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(2, eventName_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(3, resourceName_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(4, nodeName_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(5, filterByVolumeNumber_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        size += com.google.protobuf.CodedOutputStream
          .computeSInt32Size(6, volumeNumber_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof com.linbit.linstor.proto.MsgCrtWatchOuterClass.MsgCrtWatch)) {
        return super.equals(obj);
      }
      com.linbit.linstor.proto.MsgCrtWatchOuterClass.MsgCrtWatch other = (com.linbit.linstor.proto.MsgCrtWatchOuterClass.MsgCrtWatch) obj;

      boolean result = true;
      result = result && (hasWatchId() == other.hasWatchId());
      if (hasWatchId()) {
        result = result && (getWatchId()
            == other.getWatchId());
      }
      result = result && (hasEventName() == other.hasEventName());
      if (hasEventName()) {
        result = result && getEventName()
            .equals(other.getEventName());
      }
      result = result && (hasResourceName() == other.hasResourceName());
      if (hasResourceName()) {
        result = result && getResourceName()
            .equals(other.getResourceName());
      }
      result = result && (hasNodeName() == other.hasNodeName());
      if (hasNodeName()) {
        result = result && getNodeName()
            .equals(other.getNodeName());
      }
      result = result && (hasFilterByVolumeNumber() == other.hasFilterByVolumeNumber());
      if (hasFilterByVolumeNumber()) {
        result = result && (getFilterByVolumeNumber()
            == other.getFilterByVolumeNumber());
      }
      result = result && (hasVolumeNumber() == other.hasVolumeNumber());
      if (hasVolumeNumber()) {
        result = result && (getVolumeNumber()
            == other.getVolumeNumber());
      }
      result = result && unknownFields.equals(other.unknownFields);
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasWatchId()) {
        hash = (37 * hash) + WATCH_ID_FIELD_NUMBER;
        hash = (53 * hash) + getWatchId();
      }
      if (hasEventName()) {
        hash = (37 * hash) + EVENT_NAME_FIELD_NUMBER;
        hash = (53 * hash) + getEventName().hashCode();
      }
      if (hasResourceName()) {
        hash = (37 * hash) + RESOURCE_NAME_FIELD_NUMBER;
        hash = (53 * hash) + getResourceName().hashCode();
      }
      if (hasNodeName()) {
        hash = (37 * hash) + NODE_NAME_FIELD_NUMBER;
        hash = (53 * hash) + getNodeName().hashCode();
      }
      if (hasFilterByVolumeNumber()) {
        hash = (37 * hash) + FILTER_BY_VOLUME_NUMBER_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
            getFilterByVolumeNumber());
      }
      if (hasVolumeNumber()) {
        hash = (37 * hash) + VOLUME_NUMBER_FIELD_NUMBER;
        hash = (53 * hash) + getVolumeNumber();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static com.linbit.linstor.proto.MsgCrtWatchOuterClass.MsgCrtWatch parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.linbit.linstor.proto.MsgCrtWatchOuterClass.MsgCrtWatch parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.linbit.linstor.proto.MsgCrtWatchOuterClass.MsgCrtWatch parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.linbit.linstor.proto.MsgCrtWatchOuterClass.MsgCrtWatch parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.linbit.linstor.proto.MsgCrtWatchOuterClass.MsgCrtWatch parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.linbit.linstor.proto.MsgCrtWatchOuterClass.MsgCrtWatch parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.linbit.linstor.proto.MsgCrtWatchOuterClass.MsgCrtWatch parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static com.linbit.linstor.proto.MsgCrtWatchOuterClass.MsgCrtWatch parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.linbit.linstor.proto.MsgCrtWatchOuterClass.MsgCrtWatch parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.linbit.linstor.proto.MsgCrtWatchOuterClass.MsgCrtWatch parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.linbit.linstor.proto.MsgCrtWatchOuterClass.MsgCrtWatch prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * linstor - Watch specific events
     * </pre>
     *
     * Protobuf type {@code com.linbit.linstor.proto.MsgCrtWatch}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:com.linbit.linstor.proto.MsgCrtWatch)
        com.linbit.linstor.proto.MsgCrtWatchOuterClass.MsgCrtWatchOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.linbit.linstor.proto.MsgCrtWatchOuterClass.internal_static_com_linbit_linstor_proto_MsgCrtWatch_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.linbit.linstor.proto.MsgCrtWatchOuterClass.internal_static_com_linbit_linstor_proto_MsgCrtWatch_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.linbit.linstor.proto.MsgCrtWatchOuterClass.MsgCrtWatch.class, com.linbit.linstor.proto.MsgCrtWatchOuterClass.MsgCrtWatch.Builder.class);
      }

      // Construct using com.linbit.linstor.proto.MsgCrtWatchOuterClass.MsgCrtWatch.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      public Builder clear() {
        super.clear();
        watchId_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        eventName_ = "";
        bitField0_ = (bitField0_ & ~0x00000002);
        resourceName_ = "";
        bitField0_ = (bitField0_ & ~0x00000004);
        nodeName_ = "";
        bitField0_ = (bitField0_ & ~0x00000008);
        filterByVolumeNumber_ = false;
        bitField0_ = (bitField0_ & ~0x00000010);
        volumeNumber_ = 0;
        bitField0_ = (bitField0_ & ~0x00000020);
        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.linbit.linstor.proto.MsgCrtWatchOuterClass.internal_static_com_linbit_linstor_proto_MsgCrtWatch_descriptor;
      }

      public com.linbit.linstor.proto.MsgCrtWatchOuterClass.MsgCrtWatch getDefaultInstanceForType() {
        return com.linbit.linstor.proto.MsgCrtWatchOuterClass.MsgCrtWatch.getDefaultInstance();
      }

      public com.linbit.linstor.proto.MsgCrtWatchOuterClass.MsgCrtWatch build() {
        com.linbit.linstor.proto.MsgCrtWatchOuterClass.MsgCrtWatch result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.linbit.linstor.proto.MsgCrtWatchOuterClass.MsgCrtWatch buildPartial() {
        com.linbit.linstor.proto.MsgCrtWatchOuterClass.MsgCrtWatch result = new com.linbit.linstor.proto.MsgCrtWatchOuterClass.MsgCrtWatch(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.watchId_ = watchId_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.eventName_ = eventName_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.resourceName_ = resourceName_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.nodeName_ = nodeName_;
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000010;
        }
        result.filterByVolumeNumber_ = filterByVolumeNumber_;
        if (((from_bitField0_ & 0x00000020) == 0x00000020)) {
          to_bitField0_ |= 0x00000020;
        }
        result.volumeNumber_ = volumeNumber_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.linbit.linstor.proto.MsgCrtWatchOuterClass.MsgCrtWatch) {
          return mergeFrom((com.linbit.linstor.proto.MsgCrtWatchOuterClass.MsgCrtWatch)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.linbit.linstor.proto.MsgCrtWatchOuterClass.MsgCrtWatch other) {
        if (other == com.linbit.linstor.proto.MsgCrtWatchOuterClass.MsgCrtWatch.getDefaultInstance()) return this;
        if (other.hasWatchId()) {
          setWatchId(other.getWatchId());
        }
        if (other.hasEventName()) {
          bitField0_ |= 0x00000002;
          eventName_ = other.eventName_;
          onChanged();
        }
        if (other.hasResourceName()) {
          bitField0_ |= 0x00000004;
          resourceName_ = other.resourceName_;
          onChanged();
        }
        if (other.hasNodeName()) {
          bitField0_ |= 0x00000008;
          nodeName_ = other.nodeName_;
          onChanged();
        }
        if (other.hasFilterByVolumeNumber()) {
          setFilterByVolumeNumber(other.getFilterByVolumeNumber());
        }
        if (other.hasVolumeNumber()) {
          setVolumeNumber(other.getVolumeNumber());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        if (!hasWatchId()) {
          return false;
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.linbit.linstor.proto.MsgCrtWatchOuterClass.MsgCrtWatch parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.linbit.linstor.proto.MsgCrtWatchOuterClass.MsgCrtWatch) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private int watchId_ ;
      /**
       * <pre>
       * Identifying number for this watch
       * Events for this watch will be sent with this watch_id
       * </pre>
       *
       * <code>required int32 watch_id = 1;</code>
       */
      public boolean hasWatchId() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <pre>
       * Identifying number for this watch
       * Events for this watch will be sent with this watch_id
       * </pre>
       *
       * <code>required int32 watch_id = 1;</code>
       */
      public int getWatchId() {
        return watchId_;
      }
      /**
       * <pre>
       * Identifying number for this watch
       * Events for this watch will be sent with this watch_id
       * </pre>
       *
       * <code>required int32 watch_id = 1;</code>
       */
      public Builder setWatchId(int value) {
        bitField0_ |= 0x00000001;
        watchId_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Identifying number for this watch
       * Events for this watch will be sent with this watch_id
       * </pre>
       *
       * <code>required int32 watch_id = 1;</code>
       */
      public Builder clearWatchId() {
        bitField0_ = (bitField0_ & ~0x00000001);
        watchId_ = 0;
        onChanged();
        return this;
      }

      private java.lang.Object eventName_ = "";
      /**
       * <pre>
       * Filter: Only the named events
       * </pre>
       *
       * <code>optional string event_name = 2;</code>
       */
      public boolean hasEventName() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <pre>
       * Filter: Only the named events
       * </pre>
       *
       * <code>optional string event_name = 2;</code>
       */
      public java.lang.String getEventName() {
        java.lang.Object ref = eventName_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            eventName_ = s;
          }
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * Filter: Only the named events
       * </pre>
       *
       * <code>optional string event_name = 2;</code>
       */
      public com.google.protobuf.ByteString
          getEventNameBytes() {
        java.lang.Object ref = eventName_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          eventName_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * Filter: Only the named events
       * </pre>
       *
       * <code>optional string event_name = 2;</code>
       */
      public Builder setEventName(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        eventName_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Filter: Only the named events
       * </pre>
       *
       * <code>optional string event_name = 2;</code>
       */
      public Builder clearEventName() {
        bitField0_ = (bitField0_ & ~0x00000002);
        eventName_ = getDefaultInstance().getEventName();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Filter: Only the named events
       * </pre>
       *
       * <code>optional string event_name = 2;</code>
       */
      public Builder setEventNameBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        eventName_ = value;
        onChanged();
        return this;
      }

      private java.lang.Object resourceName_ = "";
      /**
       * <pre>
       * Filter: Only events related to the resource definition with this name
       * </pre>
       *
       * <code>optional string resource_name = 3;</code>
       */
      public boolean hasResourceName() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <pre>
       * Filter: Only events related to the resource definition with this name
       * </pre>
       *
       * <code>optional string resource_name = 3;</code>
       */
      public java.lang.String getResourceName() {
        java.lang.Object ref = resourceName_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            resourceName_ = s;
          }
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * Filter: Only events related to the resource definition with this name
       * </pre>
       *
       * <code>optional string resource_name = 3;</code>
       */
      public com.google.protobuf.ByteString
          getResourceNameBytes() {
        java.lang.Object ref = resourceName_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          resourceName_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * Filter: Only events related to the resource definition with this name
       * </pre>
       *
       * <code>optional string resource_name = 3;</code>
       */
      public Builder setResourceName(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000004;
        resourceName_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Filter: Only events related to the resource definition with this name
       * </pre>
       *
       * <code>optional string resource_name = 3;</code>
       */
      public Builder clearResourceName() {
        bitField0_ = (bitField0_ & ~0x00000004);
        resourceName_ = getDefaultInstance().getResourceName();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Filter: Only events related to the resource definition with this name
       * </pre>
       *
       * <code>optional string resource_name = 3;</code>
       */
      public Builder setResourceNameBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000004;
        resourceName_ = value;
        onChanged();
        return this;
      }

      private java.lang.Object nodeName_ = "";
      /**
       * <pre>
       * Filter: Only events related to this node
       * </pre>
       *
       * <code>optional string node_name = 4;</code>
       */
      public boolean hasNodeName() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <pre>
       * Filter: Only events related to this node
       * </pre>
       *
       * <code>optional string node_name = 4;</code>
       */
      public java.lang.String getNodeName() {
        java.lang.Object ref = nodeName_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            nodeName_ = s;
          }
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * Filter: Only events related to this node
       * </pre>
       *
       * <code>optional string node_name = 4;</code>
       */
      public com.google.protobuf.ByteString
          getNodeNameBytes() {
        java.lang.Object ref = nodeName_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          nodeName_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * Filter: Only events related to this node
       * </pre>
       *
       * <code>optional string node_name = 4;</code>
       */
      public Builder setNodeName(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000008;
        nodeName_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Filter: Only events related to this node
       * </pre>
       *
       * <code>optional string node_name = 4;</code>
       */
      public Builder clearNodeName() {
        bitField0_ = (bitField0_ & ~0x00000008);
        nodeName_ = getDefaultInstance().getNodeName();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Filter: Only events related to this node
       * </pre>
       *
       * <code>optional string node_name = 4;</code>
       */
      public Builder setNodeNameBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000008;
        nodeName_ = value;
        onChanged();
        return this;
      }

      private boolean filterByVolumeNumber_ ;
      /**
       * <pre>
       * Whether to apply the volume number filter
       * </pre>
       *
       * <code>optional bool filter_by_volume_number = 5;</code>
       */
      public boolean hasFilterByVolumeNumber() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      /**
       * <pre>
       * Whether to apply the volume number filter
       * </pre>
       *
       * <code>optional bool filter_by_volume_number = 5;</code>
       */
      public boolean getFilterByVolumeNumber() {
        return filterByVolumeNumber_;
      }
      /**
       * <pre>
       * Whether to apply the volume number filter
       * </pre>
       *
       * <code>optional bool filter_by_volume_number = 5;</code>
       */
      public Builder setFilterByVolumeNumber(boolean value) {
        bitField0_ |= 0x00000010;
        filterByVolumeNumber_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Whether to apply the volume number filter
       * </pre>
       *
       * <code>optional bool filter_by_volume_number = 5;</code>
       */
      public Builder clearFilterByVolumeNumber() {
        bitField0_ = (bitField0_ & ~0x00000010);
        filterByVolumeNumber_ = false;
        onChanged();
        return this;
      }

      private int volumeNumber_ ;
      /**
       * <pre>
       * Filter: Only events related to volumes and their definitions with this number (when filter_by_volume_number set)
       * </pre>
       *
       * <code>optional sint32 volume_number = 6;</code>
       */
      public boolean hasVolumeNumber() {
        return ((bitField0_ & 0x00000020) == 0x00000020);
      }
      /**
       * <pre>
       * Filter: Only events related to volumes and their definitions with this number (when filter_by_volume_number set)
       * </pre>
       *
       * <code>optional sint32 volume_number = 6;</code>
       */
      public int getVolumeNumber() {
        return volumeNumber_;
      }
      /**
       * <pre>
       * Filter: Only events related to volumes and their definitions with this number (when filter_by_volume_number set)
       * </pre>
       *
       * <code>optional sint32 volume_number = 6;</code>
       */
      public Builder setVolumeNumber(int value) {
        bitField0_ |= 0x00000020;
        volumeNumber_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Filter: Only events related to volumes and their definitions with this number (when filter_by_volume_number set)
       * </pre>
       *
       * <code>optional sint32 volume_number = 6;</code>
       */
      public Builder clearVolumeNumber() {
        bitField0_ = (bitField0_ & ~0x00000020);
        volumeNumber_ = 0;
        onChanged();
        return this;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:com.linbit.linstor.proto.MsgCrtWatch)
    }

    // @@protoc_insertion_point(class_scope:com.linbit.linstor.proto.MsgCrtWatch)
    private static final com.linbit.linstor.proto.MsgCrtWatchOuterClass.MsgCrtWatch DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new com.linbit.linstor.proto.MsgCrtWatchOuterClass.MsgCrtWatch();
    }

    public static com.linbit.linstor.proto.MsgCrtWatchOuterClass.MsgCrtWatch getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    @java.lang.Deprecated public static final com.google.protobuf.Parser<MsgCrtWatch>
        PARSER = new com.google.protobuf.AbstractParser<MsgCrtWatch>() {
      public MsgCrtWatch parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
          return new MsgCrtWatch(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<MsgCrtWatch> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<MsgCrtWatch> getParserForType() {
      return PARSER;
    }

    public com.linbit.linstor.proto.MsgCrtWatchOuterClass.MsgCrtWatch getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_com_linbit_linstor_proto_MsgCrtWatch_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_com_linbit_linstor_proto_MsgCrtWatch_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static  com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n\037linstor/proto/MsgCrtWatch.proto\022\030com.l" +
      "inbit.linstor.proto\"\225\001\n\013MsgCrtWatch\022\020\n\010w" +
      "atch_id\030\001 \002(\005\022\022\n\nevent_name\030\002 \001(\t\022\025\n\rres" +
      "ource_name\030\003 \001(\t\022\021\n\tnode_name\030\004 \001(\t\022\037\n\027f" +
      "ilter_by_volume_number\030\005 \001(\010\022\025\n\rvolume_n" +
      "umber\030\006 \001(\021"
    };
    com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
        new com.google.protobuf.Descriptors.FileDescriptor.    InternalDescriptorAssigner() {
          public com.google.protobuf.ExtensionRegistry assignDescriptors(
              com.google.protobuf.Descriptors.FileDescriptor root) {
            descriptor = root;
            return null;
          }
        };
    com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
        }, assigner);
    internal_static_com_linbit_linstor_proto_MsgCrtWatch_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_com_linbit_linstor_proto_MsgCrtWatch_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_com_linbit_linstor_proto_MsgCrtWatch_descriptor,
        new java.lang.String[] { "WatchId", "EventName", "ResourceName", "NodeName", "FilterByVolumeNumber", "VolumeNumber", });
  }

  // @@protoc_insertion_point(outer_class_scope)
}
