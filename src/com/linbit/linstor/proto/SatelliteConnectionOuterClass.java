// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: proto/SatelliteConnection.proto

package com.linbit.linstor.proto;

public final class SatelliteConnectionOuterClass {
  private SatelliteConnectionOuterClass() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }

  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
    registerAllExtensions(
        (com.google.protobuf.ExtensionRegistryLite) registry);
  }
  public interface SatelliteConnectionOrBuilder extends
      // @@protoc_insertion_point(interface_extends:com.linbit.linstor.proto.SatelliteConnection)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * Reference to a given net interface name which should be used
     * as a satellite connection
     * </pre>
     *
     * <code>required string net_interface_name = 1;</code>
     */
    boolean hasNetInterfaceName();
    /**
     * <pre>
     * Reference to a given net interface name which should be used
     * as a satellite connection
     * </pre>
     *
     * <code>required string net_interface_name = 1;</code>
     */
    java.lang.String getNetInterfaceName();
    /**
     * <pre>
     * Reference to a given net interface name which should be used
     * as a satellite connection
     * </pre>
     *
     * <code>required string net_interface_name = 1;</code>
     */
    com.google.protobuf.ByteString
        getNetInterfaceNameBytes();

    /**
     * <pre>
     * The port of the satellite
     * </pre>
     *
     * <code>required sint32 port = 2;</code>
     */
    boolean hasPort();
    /**
     * <pre>
     * The port of the satellite
     * </pre>
     *
     * <code>required sint32 port = 2;</code>
     */
    int getPort();

    /**
     * <pre>
     * Encryption type
     * </pre>
     *
     * <code>required string encryption_type = 3;</code>
     */
    boolean hasEncryptionType();
    /**
     * <pre>
     * Encryption type
     * </pre>
     *
     * <code>required string encryption_type = 3;</code>
     */
    java.lang.String getEncryptionType();
    /**
     * <pre>
     * Encryption type
     * </pre>
     *
     * <code>required string encryption_type = 3;</code>
     */
    com.google.protobuf.ByteString
        getEncryptionTypeBytes();
  }
  /**
   * <pre>
   * linstor - Satellite connection
   * </pre>
   *
   * Protobuf type {@code com.linbit.linstor.proto.SatelliteConnection}
   */
  public  static final class SatelliteConnection extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:com.linbit.linstor.proto.SatelliteConnection)
      SatelliteConnectionOrBuilder {
    // Use SatelliteConnection.newBuilder() to construct.
    private SatelliteConnection(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private SatelliteConnection() {
      netInterfaceName_ = "";
      port_ = 0;
      encryptionType_ = "";
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private SatelliteConnection(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              com.google.protobuf.ByteString bs = input.readBytes();
              bitField0_ |= 0x00000001;
              netInterfaceName_ = bs;
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              port_ = input.readSInt32();
              break;
            }
            case 26: {
              com.google.protobuf.ByteString bs = input.readBytes();
              bitField0_ |= 0x00000004;
              encryptionType_ = bs;
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.linbit.linstor.proto.SatelliteConnectionOuterClass.internal_static_com_linbit_linstor_proto_SatelliteConnection_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.linbit.linstor.proto.SatelliteConnectionOuterClass.internal_static_com_linbit_linstor_proto_SatelliteConnection_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.linbit.linstor.proto.SatelliteConnectionOuterClass.SatelliteConnection.class, com.linbit.linstor.proto.SatelliteConnectionOuterClass.SatelliteConnection.Builder.class);
    }

    private int bitField0_;
    public static final int NET_INTERFACE_NAME_FIELD_NUMBER = 1;
    private volatile java.lang.Object netInterfaceName_;
    /**
     * <pre>
     * Reference to a given net interface name which should be used
     * as a satellite connection
     * </pre>
     *
     * <code>required string net_interface_name = 1;</code>
     */
    public boolean hasNetInterfaceName() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <pre>
     * Reference to a given net interface name which should be used
     * as a satellite connection
     * </pre>
     *
     * <code>required string net_interface_name = 1;</code>
     */
    public java.lang.String getNetInterfaceName() {
      java.lang.Object ref = netInterfaceName_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          netInterfaceName_ = s;
        }
        return s;
      }
    }
    /**
     * <pre>
     * Reference to a given net interface name which should be used
     * as a satellite connection
     * </pre>
     *
     * <code>required string net_interface_name = 1;</code>
     */
    public com.google.protobuf.ByteString
        getNetInterfaceNameBytes() {
      java.lang.Object ref = netInterfaceName_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        netInterfaceName_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int PORT_FIELD_NUMBER = 2;
    private int port_;
    /**
     * <pre>
     * The port of the satellite
     * </pre>
     *
     * <code>required sint32 port = 2;</code>
     */
    public boolean hasPort() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <pre>
     * The port of the satellite
     * </pre>
     *
     * <code>required sint32 port = 2;</code>
     */
    public int getPort() {
      return port_;
    }

    public static final int ENCRYPTION_TYPE_FIELD_NUMBER = 3;
    private volatile java.lang.Object encryptionType_;
    /**
     * <pre>
     * Encryption type
     * </pre>
     *
     * <code>required string encryption_type = 3;</code>
     */
    public boolean hasEncryptionType() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <pre>
     * Encryption type
     * </pre>
     *
     * <code>required string encryption_type = 3;</code>
     */
    public java.lang.String getEncryptionType() {
      java.lang.Object ref = encryptionType_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          encryptionType_ = s;
        }
        return s;
      }
    }
    /**
     * <pre>
     * Encryption type
     * </pre>
     *
     * <code>required string encryption_type = 3;</code>
     */
    public com.google.protobuf.ByteString
        getEncryptionTypeBytes() {
      java.lang.Object ref = encryptionType_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        encryptionType_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      if (!hasNetInterfaceName()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasPort()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasEncryptionType()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 1, netInterfaceName_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeSInt32(2, port_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 3, encryptionType_);
      }
      unknownFields.writeTo(output);
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, netInterfaceName_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeSInt32Size(2, port_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(3, encryptionType_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof com.linbit.linstor.proto.SatelliteConnectionOuterClass.SatelliteConnection)) {
        return super.equals(obj);
      }
      com.linbit.linstor.proto.SatelliteConnectionOuterClass.SatelliteConnection other = (com.linbit.linstor.proto.SatelliteConnectionOuterClass.SatelliteConnection) obj;

      boolean result = true;
      result = result && (hasNetInterfaceName() == other.hasNetInterfaceName());
      if (hasNetInterfaceName()) {
        result = result && getNetInterfaceName()
            .equals(other.getNetInterfaceName());
      }
      result = result && (hasPort() == other.hasPort());
      if (hasPort()) {
        result = result && (getPort()
            == other.getPort());
      }
      result = result && (hasEncryptionType() == other.hasEncryptionType());
      if (hasEncryptionType()) {
        result = result && getEncryptionType()
            .equals(other.getEncryptionType());
      }
      result = result && unknownFields.equals(other.unknownFields);
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasNetInterfaceName()) {
        hash = (37 * hash) + NET_INTERFACE_NAME_FIELD_NUMBER;
        hash = (53 * hash) + getNetInterfaceName().hashCode();
      }
      if (hasPort()) {
        hash = (37 * hash) + PORT_FIELD_NUMBER;
        hash = (53 * hash) + getPort();
      }
      if (hasEncryptionType()) {
        hash = (37 * hash) + ENCRYPTION_TYPE_FIELD_NUMBER;
        hash = (53 * hash) + getEncryptionType().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static com.linbit.linstor.proto.SatelliteConnectionOuterClass.SatelliteConnection parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.linbit.linstor.proto.SatelliteConnectionOuterClass.SatelliteConnection parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.linbit.linstor.proto.SatelliteConnectionOuterClass.SatelliteConnection parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.linbit.linstor.proto.SatelliteConnectionOuterClass.SatelliteConnection parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.linbit.linstor.proto.SatelliteConnectionOuterClass.SatelliteConnection parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.linbit.linstor.proto.SatelliteConnectionOuterClass.SatelliteConnection parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.linbit.linstor.proto.SatelliteConnectionOuterClass.SatelliteConnection parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static com.linbit.linstor.proto.SatelliteConnectionOuterClass.SatelliteConnection parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.linbit.linstor.proto.SatelliteConnectionOuterClass.SatelliteConnection parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.linbit.linstor.proto.SatelliteConnectionOuterClass.SatelliteConnection parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.linbit.linstor.proto.SatelliteConnectionOuterClass.SatelliteConnection prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * linstor - Satellite connection
     * </pre>
     *
     * Protobuf type {@code com.linbit.linstor.proto.SatelliteConnection}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:com.linbit.linstor.proto.SatelliteConnection)
        com.linbit.linstor.proto.SatelliteConnectionOuterClass.SatelliteConnectionOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.linbit.linstor.proto.SatelliteConnectionOuterClass.internal_static_com_linbit_linstor_proto_SatelliteConnection_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.linbit.linstor.proto.SatelliteConnectionOuterClass.internal_static_com_linbit_linstor_proto_SatelliteConnection_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.linbit.linstor.proto.SatelliteConnectionOuterClass.SatelliteConnection.class, com.linbit.linstor.proto.SatelliteConnectionOuterClass.SatelliteConnection.Builder.class);
      }

      // Construct using com.linbit.linstor.proto.SatelliteConnectionOuterClass.SatelliteConnection.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      public Builder clear() {
        super.clear();
        netInterfaceName_ = "";
        bitField0_ = (bitField0_ & ~0x00000001);
        port_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        encryptionType_ = "";
        bitField0_ = (bitField0_ & ~0x00000004);
        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.linbit.linstor.proto.SatelliteConnectionOuterClass.internal_static_com_linbit_linstor_proto_SatelliteConnection_descriptor;
      }

      public com.linbit.linstor.proto.SatelliteConnectionOuterClass.SatelliteConnection getDefaultInstanceForType() {
        return com.linbit.linstor.proto.SatelliteConnectionOuterClass.SatelliteConnection.getDefaultInstance();
      }

      public com.linbit.linstor.proto.SatelliteConnectionOuterClass.SatelliteConnection build() {
        com.linbit.linstor.proto.SatelliteConnectionOuterClass.SatelliteConnection result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.linbit.linstor.proto.SatelliteConnectionOuterClass.SatelliteConnection buildPartial() {
        com.linbit.linstor.proto.SatelliteConnectionOuterClass.SatelliteConnection result = new com.linbit.linstor.proto.SatelliteConnectionOuterClass.SatelliteConnection(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.netInterfaceName_ = netInterfaceName_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.port_ = port_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.encryptionType_ = encryptionType_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.linbit.linstor.proto.SatelliteConnectionOuterClass.SatelliteConnection) {
          return mergeFrom((com.linbit.linstor.proto.SatelliteConnectionOuterClass.SatelliteConnection)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.linbit.linstor.proto.SatelliteConnectionOuterClass.SatelliteConnection other) {
        if (other == com.linbit.linstor.proto.SatelliteConnectionOuterClass.SatelliteConnection.getDefaultInstance()) return this;
        if (other.hasNetInterfaceName()) {
          bitField0_ |= 0x00000001;
          netInterfaceName_ = other.netInterfaceName_;
          onChanged();
        }
        if (other.hasPort()) {
          setPort(other.getPort());
        }
        if (other.hasEncryptionType()) {
          bitField0_ |= 0x00000004;
          encryptionType_ = other.encryptionType_;
          onChanged();
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        if (!hasNetInterfaceName()) {
          return false;
        }
        if (!hasPort()) {
          return false;
        }
        if (!hasEncryptionType()) {
          return false;
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.linbit.linstor.proto.SatelliteConnectionOuterClass.SatelliteConnection parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.linbit.linstor.proto.SatelliteConnectionOuterClass.SatelliteConnection) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private java.lang.Object netInterfaceName_ = "";
      /**
       * <pre>
       * Reference to a given net interface name which should be used
       * as a satellite connection
       * </pre>
       *
       * <code>required string net_interface_name = 1;</code>
       */
      public boolean hasNetInterfaceName() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <pre>
       * Reference to a given net interface name which should be used
       * as a satellite connection
       * </pre>
       *
       * <code>required string net_interface_name = 1;</code>
       */
      public java.lang.String getNetInterfaceName() {
        java.lang.Object ref = netInterfaceName_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            netInterfaceName_ = s;
          }
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * Reference to a given net interface name which should be used
       * as a satellite connection
       * </pre>
       *
       * <code>required string net_interface_name = 1;</code>
       */
      public com.google.protobuf.ByteString
          getNetInterfaceNameBytes() {
        java.lang.Object ref = netInterfaceName_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          netInterfaceName_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * Reference to a given net interface name which should be used
       * as a satellite connection
       * </pre>
       *
       * <code>required string net_interface_name = 1;</code>
       */
      public Builder setNetInterfaceName(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        netInterfaceName_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Reference to a given net interface name which should be used
       * as a satellite connection
       * </pre>
       *
       * <code>required string net_interface_name = 1;</code>
       */
      public Builder clearNetInterfaceName() {
        bitField0_ = (bitField0_ & ~0x00000001);
        netInterfaceName_ = getDefaultInstance().getNetInterfaceName();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Reference to a given net interface name which should be used
       * as a satellite connection
       * </pre>
       *
       * <code>required string net_interface_name = 1;</code>
       */
      public Builder setNetInterfaceNameBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        netInterfaceName_ = value;
        onChanged();
        return this;
      }

      private int port_ ;
      /**
       * <pre>
       * The port of the satellite
       * </pre>
       *
       * <code>required sint32 port = 2;</code>
       */
      public boolean hasPort() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <pre>
       * The port of the satellite
       * </pre>
       *
       * <code>required sint32 port = 2;</code>
       */
      public int getPort() {
        return port_;
      }
      /**
       * <pre>
       * The port of the satellite
       * </pre>
       *
       * <code>required sint32 port = 2;</code>
       */
      public Builder setPort(int value) {
        bitField0_ |= 0x00000002;
        port_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The port of the satellite
       * </pre>
       *
       * <code>required sint32 port = 2;</code>
       */
      public Builder clearPort() {
        bitField0_ = (bitField0_ & ~0x00000002);
        port_ = 0;
        onChanged();
        return this;
      }

      private java.lang.Object encryptionType_ = "";
      /**
       * <pre>
       * Encryption type
       * </pre>
       *
       * <code>required string encryption_type = 3;</code>
       */
      public boolean hasEncryptionType() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <pre>
       * Encryption type
       * </pre>
       *
       * <code>required string encryption_type = 3;</code>
       */
      public java.lang.String getEncryptionType() {
        java.lang.Object ref = encryptionType_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            encryptionType_ = s;
          }
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * Encryption type
       * </pre>
       *
       * <code>required string encryption_type = 3;</code>
       */
      public com.google.protobuf.ByteString
          getEncryptionTypeBytes() {
        java.lang.Object ref = encryptionType_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          encryptionType_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * Encryption type
       * </pre>
       *
       * <code>required string encryption_type = 3;</code>
       */
      public Builder setEncryptionType(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000004;
        encryptionType_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Encryption type
       * </pre>
       *
       * <code>required string encryption_type = 3;</code>
       */
      public Builder clearEncryptionType() {
        bitField0_ = (bitField0_ & ~0x00000004);
        encryptionType_ = getDefaultInstance().getEncryptionType();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Encryption type
       * </pre>
       *
       * <code>required string encryption_type = 3;</code>
       */
      public Builder setEncryptionTypeBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000004;
        encryptionType_ = value;
        onChanged();
        return this;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:com.linbit.linstor.proto.SatelliteConnection)
    }

    // @@protoc_insertion_point(class_scope:com.linbit.linstor.proto.SatelliteConnection)
    private static final com.linbit.linstor.proto.SatelliteConnectionOuterClass.SatelliteConnection DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new com.linbit.linstor.proto.SatelliteConnectionOuterClass.SatelliteConnection();
    }

    public static com.linbit.linstor.proto.SatelliteConnectionOuterClass.SatelliteConnection getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    @java.lang.Deprecated public static final com.google.protobuf.Parser<SatelliteConnection>
        PARSER = new com.google.protobuf.AbstractParser<SatelliteConnection>() {
      public SatelliteConnection parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
          return new SatelliteConnection(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<SatelliteConnection> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<SatelliteConnection> getParserForType() {
      return PARSER;
    }

    public com.linbit.linstor.proto.SatelliteConnectionOuterClass.SatelliteConnection getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_com_linbit_linstor_proto_SatelliteConnection_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_com_linbit_linstor_proto_SatelliteConnection_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static  com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n\037proto/SatelliteConnection.proto\022\030com.l" +
      "inbit.linstor.proto\"X\n\023SatelliteConnecti" +
      "on\022\032\n\022net_interface_name\030\001 \002(\t\022\014\n\004port\030\002" +
      " \002(\021\022\027\n\017encryption_type\030\003 \002(\t"
    };
    com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
        new com.google.protobuf.Descriptors.FileDescriptor.    InternalDescriptorAssigner() {
          public com.google.protobuf.ExtensionRegistry assignDescriptors(
              com.google.protobuf.Descriptors.FileDescriptor root) {
            descriptor = root;
            return null;
          }
        };
    com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
        }, assigner);
    internal_static_com_linbit_linstor_proto_SatelliteConnection_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_com_linbit_linstor_proto_SatelliteConnection_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_com_linbit_linstor_proto_SatelliteConnection_descriptor,
        new java.lang.String[] { "NetInterfaceName", "Port", "EncryptionType", });
  }

  // @@protoc_insertion_point(outer_class_scope)
}
